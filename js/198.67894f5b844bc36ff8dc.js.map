{"version":3,"sources":["webpack://insights-frontend-starter-app/./src/api/index.js","webpack://insights-frontend-starter-app/./src/store/actions.js"],"names":["activeApi","instance","insights","chrome","isBeta","then","data","safeLoad","services","Object","keys","filter","oneAppKey","api","map","appName","oneApi","appVersion","name","version","url","versionMapper","DEFAULT_PREFIX","latest","servers","server","key","array","findIndex","location","origin","indexOf","onLoadApis","type","LOAD_ALL","payload","onLoadOneApi","LOAD_ONE_API","onSelectRow","SELECT_ROW"],"mappings":"8zBAKO,IAOMA,EAAY,kBACvBC,QAAA,UACUC,SAASC,OAAOC,SAAW,QAAU,GAD/C,qBAEGC,MAAK,SAACC,GAAD,OAAUC,cAASD,MACxBD,MAAK,SAACC,GAAD,MAAW,CACfE,SAAUC,OAAOC,KAAKJ,GACnBK,QAAO,SAACC,GAAD,OAAeN,EAAKM,GAAWC,OACtCC,KAAI,SAACF,GAAD,UACHG,QAASH,GACNN,EAAKM,YAILI,EAAS,SAAC,GAA6B,IAhBxBD,EAASE,EAgBZC,EAA2B,EAA3BA,KAA2B,IAArBC,eAAqB,MAAX,KAAW,EAC5CC,GAjBoBL,EAiBFG,EAjBWD,EAiBLI,IAAcH,IAASC,EAjB5B,WACrBG,IADqB,YACHP,EADG,YACQE,EADR,kBAkBzB,OAAOhB,QAAamB,GAAKf,MAAK,SAACC,GAAD,cACzBA,GADyB,IAE5BiB,OAAQH,EACRF,OACAM,QAAS,cACHlB,EAAKkB,SAAW,IADb,CAEP,CAAEJ,IAAK,QAAF,OAAUF,EAAV,YAAkBG,IAAcH,IAASC,MAE7CR,QACC,SAACc,EAAQC,EAAKC,GAAd,OACEA,EAAMC,WACJ,gBAAGR,EAAH,EAAGA,IAAH,OACqD,IAAnD,UAAGS,SAASC,QAAZ,OAAqBL,EAAOL,KAAMW,QAAQX,IACd,IAA5BK,EAAOL,IAAIW,QAAQX,QACjBM,KAETZ,KAAI,SAACW,GAAD,cACAA,GADA,IAEHL,IAC8B,IAA5BK,EAAOL,IAAIW,QAAQ,KAAnB,UACOF,SAASC,QADhB,OACyBL,EAAOL,KAC5BK,EAAOL,gB,0FC7CRY,EAAa,iBAAO,CAC/BC,KAAMC,KACNC,SAASnC,YAGEoC,EAAe,SAAC9B,GAAD,MAAW,CACrC2B,KAAMI,IACNF,SAASnB,QAAOV,KAGLgC,EAAc,SAAChC,GAAD,MAAW,CACpC2B,KAAMM,KACNJ,QAAS7B","file":"js/198.67894f5b844bc36ff8dc.js","sourcesContent":["import { versionMapper, DEFAULT_PREFIX } from './constants';\nimport instance from '@redhat-cloud-services/frontend-components-utilities/files/interceptors';\nimport { safeLoad } from 'js-yaml';\nexport { default as instance } from '@redhat-cloud-services/frontend-components-utilities/files/interceptors';\n\nexport const apiList = () => {\n  return instance.get(`/${DEFAULT_PREFIX}`);\n};\n\nexport const generateUrl = (appName, appVersion) =>\n  `/${DEFAULT_PREFIX}/${appName}/${appVersion}/openapi.json`;\n\nexport const activeApi = () =>\n  instance\n    .get(`${insights.chrome.isBeta() ? '/beta' : ''}/config/main.yml`)\n    .then((data) => safeLoad(data))\n    .then((data) => ({\n      services: Object.keys(data)\n        .filter((oneAppKey) => data[oneAppKey].api)\n        .map((oneAppKey) => ({\n          appName: oneAppKey,\n          ...data[oneAppKey],\n        })),\n    }));\n\nexport const oneApi = ({ name, version = 'v1' }) => {\n  const url = generateUrl(name, versionMapper[name] || version);\n  return instance.get(url).then((data) => ({\n    ...data,\n    latest: url,\n    name,\n    servers: [\n      ...(data.servers || []),\n      { url: `/api/${name}/${versionMapper[name] || version}` },\n    ]\n      .filter(\n        (server, key, array) =>\n          array.findIndex(\n            ({ url }) =>\n              `${location.origin}${server.url}`.indexOf(url) === 0 ||\n              server.url.indexOf(url) === 0\n          ) === key\n      )\n      .map((server) => ({\n        ...server,\n        url:\n          server.url.indexOf('/') === 0\n            ? `${location.origin}${server.url}`\n            : server.url,\n      })),\n  }));\n};\n","import { LOAD_ALL, LOAD_ONE_API, SELECT_ROW } from './actionTypes';\nimport { activeApi, oneApi } from '../api';\n\nexport const onLoadApis = () => ({\n  type: LOAD_ALL,\n  payload: activeApi(),\n});\n\nexport const onLoadOneApi = (data) => ({\n  type: LOAD_ONE_API,\n  payload: oneApi(data),\n});\n\nexport const onSelectRow = (data) => ({\n  type: SELECT_ROW,\n  payload: data,\n});\n"],"sourceRoot":""}