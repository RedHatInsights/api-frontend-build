{"version":3,"sources":["webpack://insights-frontend-starter-app/./src/Utilities/overviewRows.js","webpack://insights-frontend-starter-app/./src/routes/Overview.js"],"names":["indexToKey","columns","onSetRows","title","transforms","sortable","cellTransforms","treeTable","cellWidth","rowMapper","appName","version","selectedRows","apiName","selected","isSelected","cells","Fragment","Link","to","value","props","Badge","Button","variant","onClick","downloadFile","emptyTable","EmptyTable","Bullseye","EmptyState","EmptyStateVariant","Title","headingLevel","size","EmptyStateBody","colSpan","length","appVersion","oneApi","name","then","data","latest","fileDownload","JSON","stringify","Overview","loadApis","services","selectRow","onError","useEffect","useState","openedRows","setOpenedRows","sortBy","onSortBy","perPage","page","pageSettings","onPaginate","filter","onChangeFilter","filtered","endpoints","row","restFilterValues","frontend","paths","sub_apps","reduce","acc","curr","id","api","Boolean","some","key","toLocaleLowerCase","indexOf","filterRows","rows","loaded","sort","next","getSortKey","obj","localeCompare","sensitivity","sortRows","index","direction","SortByDirection","slice","map","subItems","isTreeOpen","includes","noDetail","Object","entries","versions","treeParent","flat","buildRows","PageHeader","className","Main","PrimaryToolbar","filterConfig","items","label","type","filterValues","placeholder","onChange","_e","isDisabled","actionsConfig","actions","values","zip","JSZip","allFiles","catch","Promise","all","flatten","files","file","generateAsync","content","multiDownload","pagination","itemCount","onSetPage","onPerPageSelect","_event","activeFiltersConfig","filters","onDelete","Table","aria-label","TableVariant","onSort","opened","sizeCalculator","rowWrapper","TreeRowWrapper","onSelect","rowKey","TableHeader","TableBody","SkeletonTable","rowSize","TableToolbar","isFooter","Pagination","dropDirection","propTypes","PropTypes","history","push","defaultProps","connect","dispatch","onLoadApis","onSelectRow","error","addNotification","description","dismissable"],"mappings":"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","file":"js/Overview.400956b1df572e5c2719.js","sourcesContent":["import React, { Fragment } from 'react';\nimport {\n  Badge,\n  Bullseye,\n  Button,\n  EmptyState,\n  Title,\n  EmptyStateBody,\n  EmptyStateVariant,\n} from '@patternfly/react-core';\nimport { Link } from 'react-router-dom';\nimport { sortable, SortByDirection, cellWidth } from '@patternfly/react-table';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components';\nimport { ExportIcon } from '@patternfly/react-icons';\nimport { oneApi } from '../api';\nimport fileDownload from 'js-file-download';\nimport JSZip from 'jszip';\nimport flatten from 'lodash/flatten';\nimport { treeTable } from '@redhat-cloud-services/frontend-components/components/TreeTable';\n\nconst indexToKey = ['', 'title', 'appName', 'version']; // pf indexes from 1 not 0\n\nexport const columns = (onSetRows) => [\n  {\n    title: 'Application name',\n    transforms: [sortable],\n    cellTransforms: [treeTable(onSetRows)],\n  },\n  { title: 'API endpoint', transforms: [sortable] },\n  { title: 'API version', transforms: [sortable, cellWidth(10)] },\n  { title: 'Download', transforms: [cellWidth(10)] },\n];\n\nexport const rowMapper = (\n  title,\n  appName,\n  version,\n  selectedRows = [],\n  apiName\n) => ({\n  selected: selectedRows?.[appName]?.isSelected,\n  cells: [\n    {\n      title: (\n        <Fragment>\n          {version ? <Link to={`/${apiName}`}>{title}</Link> : title}\n        </Fragment>\n      ),\n      value: title,\n      props: {\n        value: title,\n        'data-position': 'title',\n      },\n    },\n    version ? `/api/${apiName}` : '',\n    {\n      title: <Badge>{version}</Badge>,\n      value: version,\n    },\n    {\n      title: (\n        <Button variant=\"plain\" onClick={() => downloadFile(apiName, version)}>\n          {' '}\n          <ExportIcon />{' '}\n        </Button>\n      ),\n    },\n  ],\n});\n\nexport const emptyTable = [\n  {\n    cells: [\n      {\n        title: (\n          <EmptyTable>\n            <Bullseye>\n              <EmptyState variant={EmptyStateVariant.full}>\n                <Title headingLevel=\"h5\" size=\"lg\">\n                  No matching rules found\n                </Title>\n                <EmptyStateBody>\n                  This filter criteria matches no rules. <br /> Try changing\n                  your filter settings.\n                </EmptyStateBody>\n              </EmptyState>\n            </Bullseye>\n          </EmptyTable>\n        ),\n        props: {\n          colSpan: columns.length,\n        },\n      },\n    ],\n  },\n];\n\nexport function sortRows(curr, next, key = 'title', isDesc) {\n  const getSortKey = (obj) =>\n    key === 'appName' && obj.apiName ? 'apiName' : key;\n  return isDesc\n    ? next[getSortKey(next)]?.localeCompare(curr[getSortKey(curr)], 'en', {\n        sensitivity: 'base',\n      })\n    : curr[getSortKey(curr)]?.localeCompare(next[getSortKey(next)], 'en', {\n        sensitivity: 'base',\n      });\n}\n\nexport function buildRows(\n  sortBy,\n  { page, perPage },\n  rows,\n  selectedRows,\n  openedRows\n) {\n  if (rows.length > 0) {\n    return rows\n      .sort((curr, next) =>\n        sortRows(\n          curr,\n          next,\n          indexToKey[sortBy.index],\n          sortBy.direction === SortByDirection.desc\n        )\n      )\n      .slice((page - 1) * perPage, page * perPage)\n      .map(({ frontend, title, appName, version, apiName, api }, index) => [\n        {\n          ...rowMapper(\n            title,\n            `${api.subItems ? 'parent-' : ''}${apiName || appName}`,\n            version,\n            selectedRows,\n            apiName || appName\n          ),\n          ...(api.subItems && {\n            isTreeOpen: openedRows?.includes?.(\n              (frontend && frontend.title) || title\n            ),\n            subItems: api.subItems,\n          }),\n          noDetail: !version,\n        },\n        ...(api.subItems\n          ? Object.entries(api.subItems).map(\n              ([key, { title, versions, apiName }]) => ({\n                ...rowMapper(\n                  title,\n                  apiName || key,\n                  versions?.[0],\n                  selectedRows,\n                  apiName || key\n                ),\n                treeParent: index,\n              })\n            )\n          : []),\n      ])\n      .flat();\n  }\n\n  return emptyTable;\n}\n\nexport function filterRows(row, filter) {\n  const restFilterValues = [\n    row.frontend?.title,\n    ...(row.frontend?.paths || []),\n    // eslint-disable-next-line camelcase\n    ...(row.frontend?.sub_apps?.reduce(\n      (acc, curr) => [...acc, curr.title, curr.id],\n      []\n    ) || []),\n    row.api?.apiName,\n  ].filter(Boolean);\n  return (\n    indexToKey.some(\n      (key) =>\n        row[key] &&\n        row[key].toLocaleLowerCase().indexOf(filter.toLocaleLowerCase()) !== -1\n    ) ||\n    restFilterValues.some(\n      (value) =>\n        value.toLocaleLowerCase().indexOf(filter.toLocaleLowerCase()) !== -1\n    )\n  );\n}\n\nexport function downloadFile(appName, appVersion) {\n  oneApi({ name: appName, version: appVersion }).then((data) => {\n    delete data.latest;\n    delete data.name;\n    fileDownload(JSON.stringify(data), `${appName}-openapi.json`);\n  });\n}\n\nexport function multiDownload(selectedRows = {}, onError) {\n  const zip = new JSZip();\n  const allFiles = Object.values(selectedRows)\n    .filter(({ isSelected }) => isSelected)\n    .map(({ appName, version, apiName, subItems }) => {\n      if (subItems) {\n        return Object.entries(subItems).map(([key, { versions }]) =>\n          oneApi({ name: key, version: versions[0] }).catch(() =>\n            onError(\n              `API ${key} with version ${versions[0]} not found or broken.`\n            )\n          )\n        );\n      } else {\n        return oneApi({ name: apiName || appName, version }).catch(() =>\n          onError(\n            `API ${\n              apiName || appName\n            } with version ${version} not found or broken.`\n          )\n        );\n      }\n    });\n\n  Promise.all(flatten(allFiles)).then((files) => {\n    if (files && files.length > 1) {\n      files.map(({ name, ...file } = {}) => {\n        if (name) {\n          delete file.latest;\n          zip.file(`${name}-openapi.json`, JSON.stringify(file));\n        }\n      });\n      zip\n        .generateAsync({ type: 'blob' })\n        .then((content) => fileDownload(content, `cloud-services-openapi.zip`));\n    } else if (files && files.length === 1) {\n      const { name, ...file } = files[0] || {};\n      if (name) {\n        delete file.latest;\n        fileDownload(JSON.stringify(file), `${name}-openapi.json`);\n      }\n    }\n  });\n}\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n  Main,\n  SkeletonTable,\n  TableToolbar,\n  PrimaryToolbar,\n} from '@redhat-cloud-services/frontend-components';\nimport {\n  TreeRowWrapper,\n  sizeCalculator,\n} from '@redhat-cloud-services/frontend-components/components/TreeTable';\nimport { Pagination } from '@patternfly/react-core';\nimport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableVariant,\n} from '@patternfly/react-table';\nimport { connect } from 'react-redux';\nimport { onLoadApis, onSelectRow } from '../store/actions';\nimport {\n  filterRows,\n  buildRows,\n  columns,\n  multiDownload,\n} from '../Utilities/overviewRows';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/cjs/actions';\n\nconst isNotSelected = ({ selectedRows }) => {\n  return (\n    !selectedRows ||\n    Object.values(selectedRows || {})\n      .map(({ isSelected }) => isSelected)\n      .filter(Boolean).length === 0\n  );\n};\n\nconst Overview = ({ loadApis, services, selectRow, onError }) => {\n  useEffect(() => {\n    loadApis();\n  }, []);\n  const [openedRows, setOpenedRows] = useState([]);\n  const [sortBy, onSortBy] = useState({});\n  const [pageSettings, onPaginate] = useState({\n    perPage: 50,\n    page: 1,\n  });\n  const [filter, onChangeFilter] = useState('');\n  const filtered =\n    filter && services.endpoints.filter((row) => filterRows(row, filter));\n  const rows = services.loaded\n    ? buildRows(\n        sortBy,\n        pageSettings,\n        filtered || services.endpoints,\n        services.selectedRows,\n        openedRows\n      )\n    : [];\n  const onSetRows = (_e, { props: { value } }) => {\n    if (openedRows.includes(value)) {\n      setOpenedRows(() => openedRows.filter((opened) => opened !== value));\n    } else {\n      setOpenedRows(() => [...openedRows, value]);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <PageHeader className=\"pf-m-light\">\n        <PageHeaderTitle title=\"API documentation\" />\n      </PageHeader>\n      <Main className=\"ins-c-docs__api\">\n        <React.Fragment>\n          <PrimaryToolbar\n            filterConfig={{\n              items: [\n                {\n                  label: 'Filter by text',\n                  type: 'text',\n                  filterValues: {\n                    id: 'filter-by-string',\n                    key: 'filter-by-string',\n                    placeholder: 'Filter by text',\n                    value: filter,\n                    onChange: (_e, value) => {\n                      onPaginate({\n                        ...pageSettings,\n                        page: 1,\n                      });\n                      onChangeFilter(value);\n                    },\n                    isDisabled: !services.loaded,\n                  },\n                },\n              ],\n            }}\n            actionsConfig={{\n              actions: [\n                {\n                  label: 'Download Selected',\n                  props: {\n                    isDisabled: isNotSelected(services),\n                    onClick: () =>\n                      multiDownload(services.selectedRows, onError),\n                  },\n                },\n              ],\n            }}\n            {...(services.loaded && {\n              pagination: {\n                ...pageSettings,\n                itemCount: (filtered || services.endpoints).length,\n                onSetPage: (_e, page) =>\n                  onPaginate({\n                    ...pageSettings,\n                    page,\n                  }),\n                onPerPageSelect: (_event, perPage) =>\n                  onPaginate({\n                    ...pageSettings,\n                    perPage,\n                  }),\n              },\n            })}\n            {...(filter.length > 0 && {\n              activeFiltersConfig: {\n                filters: [\n                  {\n                    name: filter,\n                  },\n                ],\n                onDelete: () => {\n                  onPaginate({\n                    ...pageSettings,\n                    page: 1,\n                  });\n                  onChangeFilter('');\n                },\n              },\n            })}\n          />\n          {services.loaded ? (\n            <Table\n              className=\"pf-m-expandable pf-c-treeview\"\n              aria-label=\"Sortable Table\"\n              variant={TableVariant.compact}\n              sortBy={sortBy}\n              onSort={(_e, index, direction) => onSortBy({ index, direction })}\n              cells={columns(onSetRows)}\n              rows={sizeCalculator(rows)}\n              rowWrapper={TreeRowWrapper}\n              {...((filtered || services.endpoints).length > 0 && {\n                onSelect: (_e, isSelected, rowKey) => {\n                  if (rowKey === -1) {\n                    selectRow(isSelected, rows);\n                  } else {\n                    selectRow(isSelected, rows[rowKey]);\n                  }\n                },\n              })}\n            >\n              <TableHeader />\n              <TableBody />\n            </Table>\n          ) : (\n            <SkeletonTable columns={columns} rowSize={28} />\n          )}\n        </React.Fragment>\n        <TableToolbar isFooter>\n          {services.loaded ? (\n            <Pagination\n              variant=\"bottom\"\n              dropDirection=\"up\"\n              itemCount={(filtered || services.endpoints).length}\n              perPage={pageSettings.perPage}\n              page={pageSettings.page}\n              onSetPage={(_e, page) =>\n                onPaginate({\n                  ...pageSettings,\n                  page,\n                })\n              }\n              onPerPageSelect={(_event, perPage) =>\n                onPaginate({\n                  ...pageSettings,\n                  perPage,\n                })\n              }\n            />\n          ) : (\n            `loading`\n          )}\n        </TableToolbar>\n      </Main>\n    </React.Fragment>\n  );\n};\n\nOverview.propTypes = {\n  loadApis: PropTypes.func,\n  onError: PropTypes.func,\n  services: PropTypes.shape({\n    loaded: PropTypes.bool,\n    selectedRows: PropTypes.shape({\n      isSelected: PropTypes.bool,\n    }),\n    endpoints: PropTypes.arrayOf(\n      PropTypes.shape({\n        [PropTypes.string]: PropTypes.oneOfType([\n          PropTypes.string,\n          PropTypes.number,\n          PropTypes.bool,\n          PropTypes.node,\n        ]),\n      })\n    ),\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }),\n  selectRow: PropTypes.func,\n};\nOverview.defaultProps = {\n  loadApis: () => undefined,\n  selectRow: () => undefined,\n  onError: () => undefined,\n  services: {\n    loaded: false,\n    selectedRows: {},\n  },\n};\n\nexport default connect(\n  ({ services }) => ({\n    services,\n  }),\n  (dispatch) => ({\n    loadApis: () => dispatch(onLoadApis()),\n    selectRow: (isSelected, row) => dispatch(onSelectRow({ isSelected, row })),\n    onError: (error) =>\n      dispatch(\n        addNotification({\n          variant: 'danger',\n          title: 'Server error',\n          description: error,\n          dismissable: true,\n        })\n      ),\n  })\n)(Overview);\n"],"sourceRoot":""}