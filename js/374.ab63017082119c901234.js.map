{"version":3,"sources":["webpack://insights-frontend-starter-app/./src/AppEntry.js"],"names":["AppEntry","logger","registry","init","value","getRegistry","Provider","store","getStore","basename","getBaseName","window","location","pathname","propTypes","PropTypes"],"mappings":"oQAQMA,EAAW,SAAC,GAAe,IAAbC,EAAa,EAAbA,OACZC,EAAWD,GAASE,OAAKF,IAAUE,SACzC,OACE,kBAAC,aAAD,CACEC,MAAO,CACLC,YAAa,kBAAMH,KAGrB,kBAAC,EAAAI,SAAD,CAAUC,OAAOJ,OAAKF,GAAQO,YAC5B,kBAAC,gBAAD,CAAQC,UAAUC,iBAAYC,OAAOC,SAASC,WAC5C,kBAAC,IAAD,UAOVb,EAASc,UAAY,CACnBb,O,MAAQc,QAGV","file":"js/374.ab63017082119c901234.js","sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { init, RegistryContext } from './store';\nimport App from './App';\nimport { getBaseName } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\nimport PropTypes from 'prop-types';\n\nconst AppEntry = ({ logger }) => {\n  const registry = logger ? init(logger) : init();\n  return (\n    <RegistryContext.Provider\n      value={{\n        getRegistry: () => registry,\n      }}\n    >\n      <Provider store={init(logger).getStore()}>\n        <Router basename={getBaseName(window.location.pathname)}>\n          <App />\n        </Router>\n      </Provider>\n    </RegistryContext.Provider>\n  );\n};\n\nAppEntry.propTypes = {\n  logger: PropTypes.any,\n};\n\nexport default AppEntry;\n"],"sourceRoot":""}