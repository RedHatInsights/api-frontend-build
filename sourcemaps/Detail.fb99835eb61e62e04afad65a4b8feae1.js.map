{"version":3,"file":"js/Detail.1652794531012.6534a1cd23f7ca9f827b.js","mappings":"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","sources":["webpack:///./src/api/index.js","webpack:///./src/routes/Detail.js","webpack:///./src/Utilities/hooks.js","webpack:///./src/store/actions.js"],"sourcesContent":["import { versionMapper, DEFAULT_PREFIX } from './constants';\nimport instance from '@redhat-cloud-services/frontend-components-utilities/interceptors';\nimport { load } from 'js-yaml';\nexport { default as instance } from '@redhat-cloud-services/frontend-components-utilities/interceptors';\n\nexport const apiList = () => {\n  return instance.get(`/${DEFAULT_PREFIX}`);\n};\n\nexport const generateUrl = (appName, appVersion) =>\n  `/${DEFAULT_PREFIX}/${appName}/${appVersion}/openapi.json`;\n\nexport const activeApi = () =>\n  instance\n    .get(`${insights.chrome.isBeta() ? '/beta' : ''}/config/main.yml`)\n    .then((data) => load(data))\n    .then((data) => ({\n      services: Object.keys(data)\n        .filter((oneAppKey) => data[oneAppKey].api)\n        .map((oneAppKey) => ({\n          appName: oneAppKey,\n          ...data[oneAppKey],\n        })),\n    }));\n\nexport const oneApi = ({ name, version = 'v1', url: defaultUrl }) => {\n  const url = defaultUrl ?? generateUrl(name, versionMapper[name] || version);\n  return instance.get(url).then((data) => ({\n    ...data,\n    latest: url,\n    name,\n    servers: [\n      ...(data.servers || []),\n      { url: `/api/${name}/${versionMapper[name] || version}` },\n    ]\n      .filter(\n        (server, key, array) =>\n          array.findIndex(\n            ({ url }) =>\n              `${location.origin}${server.url}`.indexOf(url) === 0 ||\n              server.url.indexOf(url) === 0\n          ) === key\n      )\n      .map((server) => ({\n        ...server,\n        url:\n          server.url.indexOf('/') === 0\n            ? `${location.origin}${server.url}`\n            : server.url,\n      })),\n  }));\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport SwaggerUI from 'swagger-ui-react';\nimport 'swagger-ui-react/swagger-ui.css';\nimport { onLoadOneApi } from '../store/actions';\nimport {\n  Skeleton,\n  SkeletonSize,\n} from '@redhat-cloud-services/frontend-components/Skeleton';\nimport { Facebook } from 'react-content-loader';\nimport {\n  CardBody,\n  Card,\n  Breadcrumb,\n  BreadcrumbItem,\n  Modal,\n  Button,\n  Level,\n  LevelItem,\n  ButtonVariant,\n  Split,\n  SplitItem,\n  TextContent,\n  Text,\n} from '@patternfly/react-core';\nimport { useParams } from 'react-router-dom';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport ReactJson from 'react-json-view';\nimport { useQuery } from '../Utilities/hooks';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\n\nconst Detail = ({ loadApi, detail }) => {\n  const { apiName, version = 'v1' } = useParams();\n  const query = useQuery();\n  const { auth } = useChrome();\n  useEffect(() => {\n    loadApi(apiName, version, query.get('url'));\n  }, []);\n\n  const requestInterceptor = useCallback(\n    async (req) => {\n      req.headers = {\n        ...(req.headers || {}),\n        Authorization: `Bearer ${await auth.getToken()}`,\n      };\n      return req;\n    },\n    [auth]\n  );\n\n  const [isOpen, onModalToggle] = useState(false);\n\n  return (\n    <React.Fragment>\n      <PageHeader className=\"pf-m-light\">\n        <PageHeaderTitle\n          title={\n            <React.Fragment>\n              <Breadcrumb>\n                <BreadcrumbItem>\n                  <Link to=\"/\">Overview</Link>\n                </BreadcrumbItem>\n                <BreadcrumbItem isActive>{apiName}</BreadcrumbItem>\n              </Breadcrumb>\n              <React.Fragment>\n                {detail.loaded && !detail.error && (\n                  <Level className=\"ins-c-docs__api-detail\">\n                    <LevelItem className=\"ins-c-docs__api-detail-info\">\n                      {detail.loaded ? (\n                        `Detail of ${detail.spec?.info?.title}`\n                      ) : (\n                        <Skeleton size={SkeletonSize.md} />\n                      )}\n                    </LevelItem>\n                    <LevelItem>\n                      <Split hasGutter>\n                        <SplitItem className=\"ins-c-docs__api-detail-info\">\n                          {detail.loaded && !detail.error ? (\n                            <TextContent>\n                              <Text\n                                component=\"a\"\n                                href={`${\n                                  detail.latest.includes('https://')\n                                    ? ''\n                                    : location.origin\n                                }${detail.latest}`}\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                              >\n                                Open Raw <ExternalLinkAltIcon size=\"sm\" />\n                              </Text>\n                            </TextContent>\n                          ) : (\n                            <Skeleton size={SkeletonSize.mdmd} />\n                          )}\n                        </SplitItem>\n                        <SplitItem className=\"ins-c-docs__api-detail-info\">\n                          {detail.loaded ? (\n                            <Button\n                              onClick={() => onModalToggle(true)}\n                              variant={ButtonVariant.secondary}\n                            >\n                              Show JSON\n                            </Button>\n                          ) : (\n                            <Skeleton size={SkeletonSize.md} />\n                          )}\n                        </SplitItem>\n                      </Split>\n                    </LevelItem>\n                  </Level>\n                )}\n              </React.Fragment>\n            </React.Fragment>\n          }\n        />\n      </PageHeader>\n      <Main>\n        <React.Fragment>\n          <Card>\n            <CardBody>\n              {detail.loaded && (\n                <SwaggerUI\n                  deepLinking\n                  docExpansion=\"list\"\n                  spec={detail.spec}\n                  requestInterceptor={requestInterceptor}\n                  onComplete={(system) => {\n                    const {\n                      layoutActions: { show },\n                    } = system;\n                    system.layoutActions.show = (isShownKey, isShown) => {\n                      history.replaceState(\n                        {},\n                        '',\n                        `${location.pathname}#${CSS.escape(\n                          isShownKey.join('-')\n                        )}`\n                      );\n                      show(isShownKey, isShown);\n                    };\n\n                    if (location.hash && location.hash.length > 0) {\n                      const found = document.querySelector(\n                        `[id$='${location.hash\n                          .replace('#', '')\n                          .replace(/\\\\./g, '\\\\\\\\.')}']`\n                      );\n                      if (found) {\n                        found.scrollIntoView();\n                        show(\n                          location.hash\n                            .replace('#', '')\n                            .replace(/\\\\/g, '')\n                            .split('-'),\n                          true\n                        );\n                      }\n                    }\n                  }}\n                />\n              )}\n              {!detail.loaded && <Facebook />}\n            </CardBody>\n          </Card>\n        </React.Fragment>\n      </Main>\n      <Modal\n        width={'50%'}\n        title=\"Spec JSON\"\n        isOpen={isOpen}\n        onClose={() => onModalToggle(false)}\n        actions={[\n          <Button\n            key=\"close\"\n            variant={ButtonVariant.secondary}\n            onClick={() => onModalToggle(false)}\n          >\n            Close\n          </Button>,\n        ]}\n      >\n        <ReactJson\n          displayDataTypes={false}\n          shouldCollapse={({ name }) => name !== 'root' && name !== 'paths'}\n          src={detail.spec}\n        />\n      </Modal>\n    </React.Fragment>\n  );\n};\n\nDetail.propTypes = {\n  loadApi: PropTypes.func,\n  detail: PropTypes.shape({\n    loaded: PropTypes.bool,\n    spec: PropTypes.string,\n    error: PropTypes.bool,\n    latest: PropTypes.string,\n  }),\n};\nDetail.defaultProps = {\n  loadApi: () => undefined,\n  detail: {\n    loaded: false,\n  },\n};\n\nexport default connect(\n  ({ detail }) => ({\n    detail,\n  }),\n  (dispatch) => ({\n    loadApi: (api, version, url) =>\n      dispatch(onLoadOneApi({ name: api, version, url })),\n  })\n)(Detail);\n","import { useLocation } from 'react-router-dom';\nexport const useQuery = () => new URLSearchParams(useLocation().search);\n","import { LOAD_ALL, LOAD_ONE_API, SELECT_ROW } from './actionTypes';\nimport { activeApi, oneApi } from '../api';\n\nexport const onLoadApis = () => ({\n  type: LOAD_ALL,\n  payload: activeApi(),\n});\n\nexport const onLoadOneApi = (data) => ({\n  type: LOAD_ONE_API,\n  payload: oneApi(data),\n});\n\nexport const onSelectRow = (data) => ({\n  type: SELECT_ROW,\n  payload: data,\n});\n"],"names":["activeApi","instance","insights","chrome","isBeta","then","data","load","services","Object","keys","filter","oneAppKey","api","map","appName","oneApi","appVersion","name","version","defaultUrl","url","versionMapper","DEFAULT_PREFIX","latest","servers","server","key","array","findIndex","location","origin","indexOf","Detail","loadApi","detail","useParams","apiName","query","URLSearchParams","useLocation","search","auth","useChrome","useEffect","get","requestInterceptor","useCallback","req","headers","getToken","Authorization","useState","isOpen","onModalToggle","PageHeader","className","PageHeaderTitle","title","Breadcrumb","BreadcrumbItem","Link","to","isActive","loaded","error","Level","LevelItem","spec","info","Skeleton","size","SkeletonSize","Split","hasGutter","SplitItem","TextContent","Text","component","href","includes","target","rel","Button","onClick","variant","ButtonVariant","Main","Card","CardBody","deepLinking","docExpansion","onComplete","system","show","layoutActions","isShownKey","isShown","history","replaceState","pathname","CSS","escape","join","hash","length","found","document","querySelector","replace","scrollIntoView","split","Modal","width","onClose","actions","displayDataTypes","shouldCollapse","src","propTypes","PropTypes","defaultProps","connect","dispatch","onLoadOneApi","onLoadApis","type","LOAD_ALL","payload","LOAD_ONE_API","onSelectRow","SELECT_ROW"],"sourceRoot":""}