{"version":3,"file":"js/Overview.1653995555981.3f044e815d932d3b45ab.js","mappings":"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","sources":["webpack:///./src/api/index.js","webpack:///./src/Utilities/overviewRows.js","webpack:///./src/routes/Overview.js","webpack:///./src/store/actions.js"],"sourcesContent":["import { versionMapper, DEFAULT_PREFIX } from './constants';\nimport instance from '@redhat-cloud-services/frontend-components-utilities/interceptors';\nimport { load } from 'js-yaml';\nexport { default as instance } from '@redhat-cloud-services/frontend-components-utilities/interceptors';\n\nexport const apiList = () => {\n  return instance.get(`/${DEFAULT_PREFIX}`);\n};\n\nexport const generateUrl = (appName, appVersion) =>\n  `/${DEFAULT_PREFIX}/${appName}/${appVersion}/openapi.json`;\n\nexport const activeApi = () =>\n  instance\n    .get(`${insights.chrome.isBeta() ? '/beta' : ''}/config/main.yml`)\n    .then((data) => load(data))\n    .then((data) => ({\n      services: Object.keys(data)\n        .filter((oneAppKey) => data[oneAppKey].api)\n        .map((oneAppKey) => ({\n          appName: oneAppKey,\n          ...data[oneAppKey],\n        })),\n    }));\n\nexport const getSpec = (url, isGithub) => {\n  const spec = instance.get(url);\n  if (isGithub) {\n    return spec.then(({ content }) => load(Buffer.from(content, 'base64')));\n  }\n\n  return spec;\n};\n\nexport const isValidGithub = ({ owner, repo, content } = {}) => {\n  return owner && repo && content;\n};\n\nexport const oneApi = ({ name, version = 'v1', url: defaultUrl, github }) => {\n  const url = isValidGithub(github)\n    ? `https://api.github.com/repos/${github.owner}/${github.repo}/contents/${github.content}`\n    : defaultUrl ?? generateUrl(name, versionMapper[name] || version);\n  const spec = getSpec(url, isValidGithub(github));\n  return spec.then((data) => ({\n    ...data,\n    latest: url,\n    name,\n    servers: [\n      ...(data.servers || []),\n      { url: `/api/${name}/${versionMapper[name] || version}` },\n    ]\n      .filter(\n        (server, key, array) =>\n          array.findIndex(\n            ({ url }) =>\n              `${location.origin}${server.url}`.indexOf(url) === 0 ||\n              server.url.indexOf(url) === 0\n          ) === key\n      )\n      .map((server) => ({\n        ...server,\n        url:\n          server.url.indexOf('/') === 0\n            ? `${location.origin}${server.url}`\n            : server.url,\n      })),\n  }));\n};\n","import React, { Fragment } from 'react';\nimport {\n  Badge,\n  Bullseye,\n  Button,\n  EmptyState,\n  Title,\n  EmptyStateBody,\n  EmptyStateVariant,\n} from '@patternfly/react-core';\nimport { Link } from 'react-router-dom';\nimport {\n  cellWidth,\n  nowrap,\n  sortable,\n  SortByDirection,\n} from '@patternfly/react-table';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components/EmptyTable';\nimport { ExportIcon, ExternalLinkSquareAltIcon } from '@patternfly/react-icons';\nimport { oneApi } from '../api';\nimport fileDownload from 'js-file-download';\nimport JSZip from 'jszip';\nimport flatten from 'lodash/flatten';\nimport { treeTable } from '@redhat-cloud-services/frontend-components/TreeTable';\n\nconst indexToKey = ['', 'title', 'appName', 'version']; // pf indexes from 1 not 0\n\nexport const columns = (onSetRows) => [\n  {\n    title: 'Application name',\n    transforms: [sortable],\n    cellTransforms: [treeTable(onSetRows)],\n  },\n  { title: 'API endpoint', transforms: [nowrap, sortable, cellWidth(10)] },\n  { title: 'API version', transforms: [nowrap, sortable, cellWidth(10)] },\n  { title: 'Download', transforms: [cellWidth(10)] },\n];\n\nexport const rowMapper = (\n  title,\n  versions,\n  url,\n  github,\n  selectedRows = [],\n  apiName\n) => ({\n  selected: selectedRows?.[title]?.isSelected,\n  cells: [\n    {\n      title: (\n        <Fragment>\n          {versions || url || github ? (\n            <Link\n              to={`/${apiName}${\n                versions && versions[0] !== 'v1'\n                  ? `/${apiName}/${versions[0] || ''}`\n                  : ''\n              }${url || github ? '?' : ''}${url ? `url=${url}` : ''}${\n                github\n                  ? `github-owner=${github.owner}&github-repo=${github.repo}&github-content=${github.path}`\n                  : ''\n              }`}\n            >\n              {title}\n            </Link>\n          ) : (\n            title\n          )}\n        </Fragment>\n      ),\n      value: title,\n      props: {\n        value: title,\n        'data-position': 'title',\n      },\n    },\n    versions\n      ? `/api/${apiName}`\n      : url\n      ? {\n          title: (\n            <span className=\"ins-c-docs__url\">\n              {url.replace(/openapi$/, '').replace(/^http(?:s):\\/\\//, '')}\n            </span>\n          ),\n          props: {\n            colSpan: 2,\n          },\n          value: url,\n        }\n      : github\n      ? {\n          title: (\n            <Fragment>\n              <Button\n                variant=\"link\"\n                isInline\n                component=\"a\"\n                icon={<ExternalLinkSquareAltIcon />}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                iconPosition=\"right\"\n                href={`https://github.com/${github.owner}/${github.repo}`}\n              >\n                {github.owner}/{github.repo}\n              </Button>\n            </Fragment>\n          ),\n          props: {\n            colSpan: 2,\n          },\n          value: github,\n        }\n      : '',\n    ...(!url && !github\n      ? [\n          {\n            title: (\n              <Fragment>\n                {versions?.map?.((version) => (\n                  <Link key={version} to={`/${apiName}/${version}`}>\n                    <Badge>{version}</Badge>\n                  </Link>\n                ))}\n              </Fragment>\n            ),\n            value: versions,\n          },\n        ]\n      : []),\n    {\n      title: (\n        <Button\n          variant=\"plain\"\n          onClick={() => downloadFile(apiName, versions?.[0], url, github)}\n        >\n          {' '}\n          <ExportIcon />{' '}\n        </Button>\n      ),\n    },\n  ],\n});\n\nexport const emptyTable = [\n  {\n    cells: [\n      {\n        title: (\n          <EmptyTable>\n            <Bullseye>\n              <EmptyState variant={EmptyStateVariant.full}>\n                <Title headingLevel=\"h5\" size=\"lg\">\n                  No matching rules found\n                </Title>\n                <EmptyStateBody>\n                  This filter criteria matches no rules. <br /> Try changing\n                  your filter settings.\n                </EmptyStateBody>\n              </EmptyState>\n            </Bullseye>\n          </EmptyTable>\n        ),\n        props: {\n          colSpan: 4,\n        },\n      },\n    ],\n  },\n];\n\nexport function sortRows(curr, next, key = 'title', isDesc) {\n  const getSortKey = (obj) =>\n    key === 'appName' && obj.apiName ? 'apiName' : key;\n  return isDesc\n    ? next[getSortKey(next)]?.localeCompare(curr[getSortKey(curr)], 'en', {\n        sensitivity: 'base',\n      })\n    : curr[getSortKey(curr)]?.localeCompare(next[getSortKey(next)], 'en', {\n        sensitivity: 'base',\n      });\n}\n\nexport function buildRows(\n  sortBy,\n  { page, perPage },\n  rows,\n  selectedRows,\n  openedRows\n) {\n  if (rows.length > 0) {\n    return rows\n      .sort((curr, next) =>\n        sortRows(\n          curr,\n          next,\n          indexToKey[sortBy.index],\n          sortBy.direction === SortByDirection.desc\n        )\n      )\n      .slice((page - 1) * perPage, page * perPage)\n      .map(({ frontend, title, appName, version, apiName, api }, index) => [\n        {\n          ...rowMapper(\n            title,\n            api.versions,\n            api.url,\n            api.github,\n            selectedRows,\n            apiName || appName\n          ),\n          ...(api.subItems && {\n            isTreeOpen: openedRows?.includes?.(\n              (frontend && frontend.title) || title\n            ),\n            subItems: api.subItems,\n          }),\n          noDetail: !version && !api.url && !api.github,\n        },\n        ...(api.subItems\n          ? Object.entries(api.subItems).map(\n              ([key, { title, versions, url, apiName, github }]) => ({\n                ...rowMapper(\n                  title,\n                  versions,\n                  url,\n                  github,\n                  selectedRows,\n                  apiName || key\n                ),\n                treeParent: index,\n              })\n            )\n          : []),\n      ])\n      .flat();\n  }\n\n  return emptyTable;\n}\n\nexport function filterRows(row, filter) {\n  const restFilterValues = [\n    row.frontend?.title,\n    ...(row.frontend?.paths || []),\n    // eslint-disable-next-line camelcase\n    ...(row.frontend?.sub_apps?.reduce(\n      (acc, curr) => [...acc, curr.title, curr.id],\n      []\n    ) || []),\n    row.api?.apiName,\n  ].filter(Boolean);\n  return (\n    indexToKey.some(\n      (key) =>\n        row[key] &&\n        row[key].toLocaleLowerCase().indexOf(filter.toLocaleLowerCase()) !== -1\n    ) ||\n    restFilterValues.some(\n      (value) =>\n        value.toLocaleLowerCase().indexOf(filter.toLocaleLowerCase()) !== -1\n    )\n  );\n}\n\nexport function downloadFile(appName, appVersion, url, github) {\n  oneApi({\n    name: appName,\n    version: appVersion,\n    url,\n    github: { ...github, content: github.path },\n  }).then((data) => {\n    delete data.latest;\n    delete data.name;\n    fileDownload(JSON.stringify(data), `${appName}-openapi.json`);\n  });\n}\n\nexport function multiDownload(selectedRows = {}, onError) {\n  const zip = new JSZip();\n  const allFiles = Object.values(selectedRows)\n    .filter(({ isSelected }) => isSelected)\n    .map(({ appName, version, apiName, subItems, url, github }) => {\n      if (subItems) {\n        return Object.entries(subItems).map(\n          ([key, { versions, url, github }]) =>\n            oneApi({ name: key, version: versions?.[0], url, github }).catch(\n              () =>\n                onError(\n                  `API ${key} with version ${versions[0]} not found or broken.`\n                )\n            )\n        );\n      } else {\n        return oneApi({ name: apiName || appName, version, url, github }).catch(\n          () =>\n            onError(\n              `API ${\n                apiName || appName\n              } with version ${version} not found or broken.`\n            )\n        );\n      }\n    });\n\n  Promise.all(flatten(allFiles)).then((files) => {\n    if (files && files.length > 1) {\n      files.map(({ name, ...file } = {}) => {\n        if (name) {\n          delete file.latest;\n          zip.file(`${name}-openapi.json`, JSON.stringify(file));\n        }\n      });\n      zip\n        .generateAsync({ type: 'blob' })\n        .then((content) => fileDownload(content, `cloud-services-openapi.zip`));\n    } else if (files && files.length === 1) {\n      const { name, ...file } = files[0] || {};\n      if (name) {\n        delete file.latest;\n        fileDownload(JSON.stringify(file), `${name}-openapi.json`);\n      }\n    }\n  });\n}\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\n\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport { SkeletonTable } from '@redhat-cloud-services/frontend-components/SkeletonTable';\nimport TableToolbar from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport {\n  TreeRowWrapper,\n  sizeCalculator,\n} from '@redhat-cloud-services/frontend-components/TreeTable';\nimport { Pagination } from '@patternfly/react-core';\nimport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableVariant,\n} from '@patternfly/react-table';\nimport { connect } from 'react-redux';\nimport { onLoadApis, onSelectRow } from '../store/actions';\nimport {\n  filterRows,\n  buildRows,\n  columns,\n  multiDownload,\n} from '../Utilities/overviewRows';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nconst isNotSelected = ({ selectedRows }) => {\n  return (\n    !selectedRows ||\n    Object.values(selectedRows || {})\n      .map(({ isSelected }) => isSelected)\n      .filter(Boolean).length === 0\n  );\n};\n\nconst Overview = ({ loadApis, services, selectRow, onError }) => {\n  useEffect(() => {\n    loadApis();\n  }, []);\n  const [openedRows, setOpenedRows] = useState([]);\n  const [sortBy, onSortBy] = useState({});\n  const [pageSettings, onPaginate] = useState({\n    perPage: 50,\n    page: 1,\n  });\n  const [filter, onChangeFilter] = useState('');\n  const filtered =\n    filter && services.endpoints.filter((row) => filterRows(row, filter));\n  const rows = services.loaded\n    ? buildRows(\n        sortBy,\n        pageSettings,\n        filtered || services.endpoints,\n        services.selectedRows,\n        openedRows\n      )\n    : [];\n  const onSetRows = (_e, { props: { value } }) => {\n    if (openedRows.includes(value)) {\n      setOpenedRows(() => openedRows.filter((opened) => opened !== value));\n    } else {\n      setOpenedRows(() => [...openedRows, value]);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <PageHeader className=\"pf-m-light\">\n        <PageHeaderTitle title=\"API documentation\" />\n      </PageHeader>\n      <Main className=\"ins-c-docs__api\">\n        <React.Fragment>\n          <PrimaryToolbar\n            filterConfig={{\n              items: [\n                {\n                  label: 'Filter by application name',\n                  type: 'text',\n                  filterValues: {\n                    id: 'filter-by-string',\n                    key: 'filter-by-string',\n                    placeholder: 'Filter by application name',\n                    value: filter,\n                    onChange: (_e, value) => {\n                      onPaginate({\n                        ...pageSettings,\n                        page: 1,\n                      });\n                      onChangeFilter(value);\n                    },\n                    isDisabled: !services.loaded,\n                  },\n                },\n              ],\n            }}\n            actionsConfig={{\n              actions: [\n                {\n                  label: 'Download selected',\n                  props: {\n                    isDisabled: isNotSelected(services),\n                    onClick: () =>\n                      multiDownload(services.selectedRows, onError),\n                  },\n                },\n              ],\n            }}\n            {...(services.loaded && {\n              pagination: {\n                ...pageSettings,\n                itemCount: (filtered || services.endpoints).length,\n                onSetPage: (_e, page) =>\n                  onPaginate({\n                    ...pageSettings,\n                    page,\n                  }),\n                onPerPageSelect: (_event, perPage) =>\n                  onPaginate({\n                    ...pageSettings,\n                    perPage,\n                  }),\n              },\n            })}\n            {...(filter.length > 0 && {\n              activeFiltersConfig: {\n                filters: [\n                  {\n                    name: filter,\n                  },\n                ],\n                onDelete: () => {\n                  onPaginate({\n                    ...pageSettings,\n                    page: 1,\n                  });\n                  onChangeFilter('');\n                },\n              },\n            })}\n          />\n          {services.loaded ? (\n            <Table\n              className=\"pf-m-expandable pf-c-treeview\"\n              aria-label=\"Sortable Table\"\n              variant={TableVariant.compact}\n              sortBy={sortBy}\n              onSort={(_e, index, direction) => onSortBy({ index, direction })}\n              cells={columns(onSetRows)}\n              rows={sizeCalculator(rows)}\n              rowWrapper={TreeRowWrapper}\n              {...((filtered || services.endpoints).length > 0 && {\n                onSelect: (_e, isSelected, rowKey) => {\n                  if (rowKey === -1) {\n                    selectRow(isSelected, rows);\n                  } else {\n                    selectRow(isSelected, rows[rowKey]);\n                  }\n                },\n              })}\n            >\n              <TableHeader />\n              <TableBody />\n            </Table>\n          ) : (\n            <SkeletonTable columns={columns} rowSize={28} />\n          )}\n        </React.Fragment>\n        <TableToolbar isFooter>\n          {services.loaded ? (\n            <Pagination\n              variant=\"bottom\"\n              dropDirection=\"up\"\n              itemCount={(filtered || services.endpoints).length}\n              perPage={pageSettings.perPage}\n              page={pageSettings.page}\n              onSetPage={(_e, page) =>\n                onPaginate({\n                  ...pageSettings,\n                  page,\n                })\n              }\n              onPerPageSelect={(_event, perPage) =>\n                onPaginate({\n                  ...pageSettings,\n                  perPage,\n                })\n              }\n            />\n          ) : (\n            `loading`\n          )}\n        </TableToolbar>\n      </Main>\n    </React.Fragment>\n  );\n};\n\nOverview.propTypes = {\n  loadApis: PropTypes.func,\n  onError: PropTypes.func,\n  services: PropTypes.shape({\n    loaded: PropTypes.bool,\n    selectedRows: PropTypes.shape({\n      isSelected: PropTypes.bool,\n    }),\n    endpoints: PropTypes.arrayOf(\n      PropTypes.shape({\n        [PropTypes.string]: PropTypes.oneOfType([\n          PropTypes.string,\n          PropTypes.number,\n          PropTypes.bool,\n          PropTypes.node,\n        ]),\n      })\n    ),\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }),\n  selectRow: PropTypes.func,\n};\nOverview.defaultProps = {\n  loadApis: () => undefined,\n  selectRow: () => undefined,\n  onError: () => undefined,\n  services: {\n    loaded: false,\n    selectedRows: {},\n  },\n};\n\nexport default connect(\n  ({ services }) => ({\n    services,\n  }),\n  (dispatch) => ({\n    loadApis: () => dispatch(onLoadApis()),\n    selectRow: (isSelected, row) => dispatch(onSelectRow({ isSelected, row })),\n    onError: (error) =>\n      dispatch(\n        addNotification({\n          variant: 'danger',\n          title: 'Server error',\n          description: error,\n          dismissable: true,\n        })\n      ),\n  })\n)(Overview);\n","import { LOAD_ALL, LOAD_ONE_API, SELECT_ROW } from './actionTypes';\nimport { activeApi, oneApi } from '../api';\n\nexport const onLoadApis = () => ({\n  type: LOAD_ALL,\n  payload: activeApi(),\n});\n\nexport const onLoadOneApi = (data) => ({\n  type: LOAD_ONE_API,\n  payload: oneApi(data),\n});\n\nexport const onSelectRow = (data) => ({\n  type: SELECT_ROW,\n  payload: data,\n});\n"],"names":["activeApi","instance","insights","chrome","isBeta","then","data","load","services","Object","keys","filter","oneAppKey","api","map","appName","isValidGithub","owner","repo","content","oneApi","appVersion","name","version","defaultUrl","url","github","versionMapper","DEFAULT_PREFIX","spec","isGithub","Buffer","from","getSpec","latest","servers","server","key","array","findIndex","location","origin","indexOf","indexToKey","columns","onSetRows","title","transforms","sortable","cellTransforms","treeTable","nowrap","cellWidth","rowMapper","versions","selectedRows","apiName","selected","isSelected","cells","Fragment","Link","to","path","value","props","className","replace","colSpan","Button","variant","isInline","component","icon","target","rel","iconPosition","href","Badge","onClick","downloadFile","emptyTable","EmptyTable","Bullseye","EmptyState","EmptyStateVariant","Title","headingLevel","size","EmptyStateBody","fileDownload","JSON","stringify","Overview","loadApis","selectRow","onError","useEffect","useState","openedRows","setOpenedRows","sortBy","onSortBy","perPage","page","pageSettings","onPaginate","onChangeFilter","filtered","endpoints","row","restFilterValues","frontend","paths","sub_apps","reduce","acc","curr","id","Boolean","some","toLocaleLowerCase","filterRows","rows","loaded","length","sort","next","getSortKey","obj","localeCompare","sensitivity","sortRows","index","direction","SortByDirection","slice","subItems","isTreeOpen","includes","noDetail","entries","treeParent","flat","buildRows","PageHeader","PageHeaderTitle","Main","PrimaryToolbar","filterConfig","items","label","type","filterValues","placeholder","onChange","_e","isDisabled","actionsConfig","actions","values","zip","JSZip","allFiles","catch","Promise","all","flatten","files","file","generateAsync","multiDownload","pagination","itemCount","onSetPage","onPerPageSelect","_event","activeFiltersConfig","filters","onDelete","Table","TableVariant","onSort","opened","sizeCalculator","rowWrapper","TreeRowWrapper","onSelect","rowKey","TableHeader","TableBody","SkeletonTable","rowSize","TableToolbar","isFooter","Pagination","dropDirection","propTypes","PropTypes","history","push","defaultProps","connect","dispatch","onLoadApis","onSelectRow","error","addNotification","description","dismissable","LOAD_ALL","payload","onLoadOneApi","LOAD_ONE_API","SELECT_ROW"],"sourceRoot":""}