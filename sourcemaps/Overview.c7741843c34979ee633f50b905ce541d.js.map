{"version":3,"file":"js/Overview.c98e7fcf6f422f99cf57.js","mappings":"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","sources":["webpack:///./src/Utilities/overviewRows.js","webpack:///./src/routes/Overview.js"],"sourcesContent":["import React, { Fragment } from 'react';\nimport {\n  Badge,\n  Bullseye,\n  Button,\n  EmptyState,\n  Title,\n  EmptyStateBody,\n  EmptyStateVariant,\n} from '@patternfly/react-core';\nimport { Link } from 'react-router-dom';\nimport {\n  cellWidth,\n  nowrap,\n  sortable,\n  SortByDirection,\n} from '@patternfly/react-table';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components/EmptyTable';\nimport { ExportIcon } from '@patternfly/react-icons';\nimport { oneApi } from '../api';\nimport fileDownload from 'js-file-download';\nimport JSZip from 'jszip';\nimport flatten from 'lodash/flatten';\nimport { treeTable } from '@redhat-cloud-services/frontend-components/TreeTable';\n\nconst indexToKey = ['', 'title', 'appName', 'version']; // pf indexes from 1 not 0\n\nexport const columns = (onSetRows) => [\n  {\n    title: 'Application name',\n    transforms: [sortable],\n    cellTransforms: [treeTable(onSetRows)],\n  },\n  { title: 'API endpoint', transforms: [nowrap, sortable, cellWidth(10)] },\n  { title: 'API version', transforms: [nowrap, sortable, cellWidth(10)] },\n  { title: 'Download', transforms: [cellWidth(10)] },\n];\n\nexport const rowMapper = (\n  title,\n  appName,\n  versions,\n  selectedRows = [],\n  apiName\n) => ({\n  selected: selectedRows?.[appName]?.isSelected,\n  cells: [\n    {\n      title: (\n        <Fragment>\n          {versions ? (\n            <Link\n              to={`/${apiName}${\n                versions[0] !== 'v1' ? `/${apiName}/${versions[0]}` : ''\n              }`}\n            >\n              {title}\n            </Link>\n          ) : (\n            title\n          )}\n        </Fragment>\n      ),\n      value: title,\n      props: {\n        value: title,\n        'data-position': 'title',\n      },\n    },\n    versions ? `/api/${apiName}` : '',\n    {\n      title: (\n        <Fragment>\n          {versions &&\n            versions.map((version) => (\n              <Link key={version} to={`/${apiName}/${version}`}>\n                <Badge>{version}</Badge>\n              </Link>\n            ))}\n        </Fragment>\n      ),\n      value: versions,\n    },\n    {\n      title: (\n        <Button\n          variant=\"plain\"\n          onClick={() => downloadFile(apiName, versions && versions[0])}\n        >\n          {' '}\n          <ExportIcon />{' '}\n        </Button>\n      ),\n    },\n  ],\n});\n\nexport const emptyTable = [\n  {\n    cells: [\n      {\n        title: (\n          <EmptyTable>\n            <Bullseye>\n              <EmptyState variant={EmptyStateVariant.full}>\n                <Title headingLevel=\"h5\" size=\"lg\">\n                  No matching rules found\n                </Title>\n                <EmptyStateBody>\n                  This filter criteria matches no rules. <br /> Try changing\n                  your filter settings.\n                </EmptyStateBody>\n              </EmptyState>\n            </Bullseye>\n          </EmptyTable>\n        ),\n        props: {\n          colSpan: 4,\n        },\n      },\n    ],\n  },\n];\n\nexport function sortRows(curr, next, key = 'title', isDesc) {\n  const getSortKey = (obj) =>\n    key === 'appName' && obj.apiName ? 'apiName' : key;\n  return isDesc\n    ? next[getSortKey(next)]?.localeCompare(curr[getSortKey(curr)], 'en', {\n        sensitivity: 'base',\n      })\n    : curr[getSortKey(curr)]?.localeCompare(next[getSortKey(next)], 'en', {\n        sensitivity: 'base',\n      });\n}\n\nexport function buildRows(\n  sortBy,\n  { page, perPage },\n  rows,\n  selectedRows,\n  openedRows\n) {\n  if (rows.length > 0) {\n    return rows\n      .sort((curr, next) =>\n        sortRows(\n          curr,\n          next,\n          indexToKey[sortBy.index],\n          sortBy.direction === SortByDirection.desc\n        )\n      )\n      .slice((page - 1) * perPage, page * perPage)\n      .map(({ frontend, title, appName, version, apiName, api }, index) => [\n        {\n          ...rowMapper(\n            title,\n            `${api.subItems ? 'parent-' : ''}${apiName || appName}`,\n            api.versions,\n            selectedRows,\n            apiName || appName\n          ),\n          ...(api.subItems && {\n            isTreeOpen: openedRows?.includes?.(\n              (frontend && frontend.title) || title\n            ),\n            subItems: api.subItems,\n          }),\n          noDetail: !version,\n        },\n        ...(api.subItems\n          ? Object.entries(api.subItems).map(\n              ([key, { title, versions, apiName }]) => ({\n                ...rowMapper(\n                  title,\n                  apiName || key,\n                  versions,\n                  selectedRows,\n                  apiName || key\n                ),\n                treeParent: index,\n              })\n            )\n          : []),\n      ])\n      .flat();\n  }\n\n  return emptyTable;\n}\n\nexport function filterRows(row, filter) {\n  const restFilterValues = [\n    row.frontend?.title,\n    ...(row.frontend?.paths || []),\n    // eslint-disable-next-line camelcase\n    ...(row.frontend?.sub_apps?.reduce(\n      (acc, curr) => [...acc, curr.title, curr.id],\n      []\n    ) || []),\n    row.api?.apiName,\n  ].filter(Boolean);\n  return (\n    indexToKey.some(\n      (key) =>\n        row[key] &&\n        row[key].toLocaleLowerCase().indexOf(filter.toLocaleLowerCase()) !== -1\n    ) ||\n    restFilterValues.some(\n      (value) =>\n        value.toLocaleLowerCase().indexOf(filter.toLocaleLowerCase()) !== -1\n    )\n  );\n}\n\nexport function downloadFile(appName, appVersion) {\n  oneApi({ name: appName, version: appVersion }).then((data) => {\n    delete data.latest;\n    delete data.name;\n    fileDownload(JSON.stringify(data), `${appName}-openapi.json`);\n  });\n}\n\nexport function multiDownload(selectedRows = {}, onError) {\n  const zip = new JSZip();\n  const allFiles = Object.values(selectedRows)\n    .filter(({ isSelected }) => isSelected)\n    .map(({ appName, version, apiName, subItems }) => {\n      if (subItems) {\n        return Object.entries(subItems).map(([key, { versions }]) =>\n          oneApi({ name: key, version: versions[0] }).catch(() =>\n            onError(\n              `API ${key} with version ${versions[0]} not found or broken.`\n            )\n          )\n        );\n      } else {\n        return oneApi({ name: apiName || appName, version }).catch(() =>\n          onError(\n            `API ${\n              apiName || appName\n            } with version ${version} not found or broken.`\n          )\n        );\n      }\n    });\n\n  Promise.all(flatten(allFiles)).then((files) => {\n    if (files && files.length > 1) {\n      files.map(({ name, ...file } = {}) => {\n        if (name) {\n          delete file.latest;\n          zip.file(`${name}-openapi.json`, JSON.stringify(file));\n        }\n      });\n      zip\n        .generateAsync({ type: 'blob' })\n        .then((content) => fileDownload(content, `cloud-services-openapi.zip`));\n    } else if (files && files.length === 1) {\n      const { name, ...file } = files[0] || {};\n      if (name) {\n        delete file.latest;\n        fileDownload(JSON.stringify(file), `${name}-openapi.json`);\n      }\n    }\n  });\n}\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\n\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport { SkeletonTable } from '@redhat-cloud-services/frontend-components/SkeletonTable';\nimport TableToolbar from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport {\n  TreeRowWrapper,\n  sizeCalculator,\n} from '@redhat-cloud-services/frontend-components/TreeTable';\nimport { Pagination } from '@patternfly/react-core';\nimport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableVariant,\n} from '@patternfly/react-table';\nimport { connect } from 'react-redux';\nimport { onLoadApis, onSelectRow } from '../store/actions';\nimport {\n  filterRows,\n  buildRows,\n  columns,\n  multiDownload,\n} from '../Utilities/overviewRows';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nconst isNotSelected = ({ selectedRows }) => {\n  return (\n    !selectedRows ||\n    Object.values(selectedRows || {})\n      .map(({ isSelected }) => isSelected)\n      .filter(Boolean).length === 0\n  );\n};\n\nconst Overview = ({ loadApis, services, selectRow, onError }) => {\n  useEffect(() => {\n    loadApis();\n  }, []);\n  const [openedRows, setOpenedRows] = useState([]);\n  const [sortBy, onSortBy] = useState({});\n  const [pageSettings, onPaginate] = useState({\n    perPage: 50,\n    page: 1,\n  });\n  const [filter, onChangeFilter] = useState('');\n  const filtered =\n    filter && services.endpoints.filter((row) => filterRows(row, filter));\n  const rows = services.loaded\n    ? buildRows(\n        sortBy,\n        pageSettings,\n        filtered || services.endpoints,\n        services.selectedRows,\n        openedRows\n      )\n    : [];\n  const onSetRows = (_e, { props: { value } }) => {\n    if (openedRows.includes(value)) {\n      setOpenedRows(() => openedRows.filter((opened) => opened !== value));\n    } else {\n      setOpenedRows(() => [...openedRows, value]);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <PageHeader className=\"pf-m-light\">\n        <PageHeaderTitle title=\"API documentation\" />\n      </PageHeader>\n      <Main className=\"ins-c-docs__api\">\n        <React.Fragment>\n          <PrimaryToolbar\n            filterConfig={{\n              items: [\n                {\n                  label: 'Filter by application name',\n                  type: 'text',\n                  filterValues: {\n                    id: 'filter-by-string',\n                    key: 'filter-by-string',\n                    placeholder: 'Filter by application name',\n                    value: filter,\n                    onChange: (_e, value) => {\n                      onPaginate({\n                        ...pageSettings,\n                        page: 1,\n                      });\n                      onChangeFilter(value);\n                    },\n                    isDisabled: !services.loaded,\n                  },\n                },\n              ],\n            }}\n            actionsConfig={{\n              actions: [\n                {\n                  label: 'Download selected',\n                  props: {\n                    isDisabled: isNotSelected(services),\n                    onClick: () =>\n                      multiDownload(services.selectedRows, onError),\n                  },\n                },\n              ],\n            }}\n            {...(services.loaded && {\n              pagination: {\n                ...pageSettings,\n                itemCount: (filtered || services.endpoints).length,\n                onSetPage: (_e, page) =>\n                  onPaginate({\n                    ...pageSettings,\n                    page,\n                  }),\n                onPerPageSelect: (_event, perPage) =>\n                  onPaginate({\n                    ...pageSettings,\n                    perPage,\n                  }),\n              },\n            })}\n            {...(filter.length > 0 && {\n              activeFiltersConfig: {\n                filters: [\n                  {\n                    name: filter,\n                  },\n                ],\n                onDelete: () => {\n                  onPaginate({\n                    ...pageSettings,\n                    page: 1,\n                  });\n                  onChangeFilter('');\n                },\n              },\n            })}\n          />\n          {services.loaded ? (\n            <Table\n              className=\"pf-m-expandable pf-c-treeview\"\n              aria-label=\"Sortable Table\"\n              variant={TableVariant.compact}\n              sortBy={sortBy}\n              onSort={(_e, index, direction) => onSortBy({ index, direction })}\n              cells={columns(onSetRows)}\n              rows={sizeCalculator(rows)}\n              rowWrapper={TreeRowWrapper}\n              {...((filtered || services.endpoints).length > 0 && {\n                onSelect: (_e, isSelected, rowKey) => {\n                  if (rowKey === -1) {\n                    selectRow(isSelected, rows);\n                  } else {\n                    selectRow(isSelected, rows[rowKey]);\n                  }\n                },\n              })}\n            >\n              <TableHeader />\n              <TableBody />\n            </Table>\n          ) : (\n            <SkeletonTable columns={columns} rowSize={28} />\n          )}\n        </React.Fragment>\n        <TableToolbar isFooter>\n          {services.loaded ? (\n            <Pagination\n              variant=\"bottom\"\n              dropDirection=\"up\"\n              itemCount={(filtered || services.endpoints).length}\n              perPage={pageSettings.perPage}\n              page={pageSettings.page}\n              onSetPage={(_e, page) =>\n                onPaginate({\n                  ...pageSettings,\n                  page,\n                })\n              }\n              onPerPageSelect={(_event, perPage) =>\n                onPaginate({\n                  ...pageSettings,\n                  perPage,\n                })\n              }\n            />\n          ) : (\n            `loading`\n          )}\n        </TableToolbar>\n      </Main>\n    </React.Fragment>\n  );\n};\n\nOverview.propTypes = {\n  loadApis: PropTypes.func,\n  onError: PropTypes.func,\n  services: PropTypes.shape({\n    loaded: PropTypes.bool,\n    selectedRows: PropTypes.shape({\n      isSelected: PropTypes.bool,\n    }),\n    endpoints: PropTypes.arrayOf(\n      PropTypes.shape({\n        [PropTypes.string]: PropTypes.oneOfType([\n          PropTypes.string,\n          PropTypes.number,\n          PropTypes.bool,\n          PropTypes.node,\n        ]),\n      })\n    ),\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }),\n  selectRow: PropTypes.func,\n};\nOverview.defaultProps = {\n  loadApis: () => undefined,\n  selectRow: () => undefined,\n  onError: () => undefined,\n  services: {\n    loaded: false,\n    selectedRows: {},\n  },\n};\n\nexport default connect(\n  ({ services }) => ({\n    services,\n  }),\n  (dispatch) => ({\n    loadApis: () => dispatch(onLoadApis()),\n    selectRow: (isSelected, row) => dispatch(onSelectRow({ isSelected, row })),\n    onError: (error) =>\n      dispatch(\n        addNotification({\n          variant: 'danger',\n          title: 'Server error',\n          description: error,\n          dismissable: true,\n        })\n      ),\n  })\n)(Overview);\n"],"names":["indexToKey","columns","onSetRows","title","transforms","sortable","cellTransforms","treeTable","nowrap","cellWidth","rowMapper","appName","versions","selectedRows","apiName","selected","isSelected","cells","Fragment","Link","to","value","props","map","version","key","Badge","Button","variant","onClick","downloadFile","emptyTable","EmptyTable","Bullseye","EmptyState","EmptyStateVariant","Title","headingLevel","size","EmptyStateBody","colSpan","appVersion","oneApi","name","then","data","latest","fileDownload","JSON","stringify","Overview","loadApis","services","selectRow","onError","useEffect","useState","openedRows","setOpenedRows","sortBy","onSortBy","perPage","page","pageSettings","onPaginate","filter","onChangeFilter","filtered","endpoints","row","restFilterValues","frontend","paths","sub_apps","reduce","acc","curr","id","api","Boolean","some","toLocaleLowerCase","indexOf","filterRows","rows","loaded","length","sort","next","getSortKey","obj","localeCompare","sensitivity","sortRows","index","direction","SortByDirection","slice","subItems","isTreeOpen","includes","noDetail","Object","entries","treeParent","flat","buildRows","PageHeader","className","PageHeaderTitle","Main","PrimaryToolbar","filterConfig","items","label","type","filterValues","placeholder","onChange","_e","isDisabled","actionsConfig","actions","values","zip","JSZip","allFiles","catch","Promise","all","flatten","files","file","generateAsync","content","multiDownload","pagination","itemCount","onSetPage","onPerPageSelect","_event","activeFiltersConfig","filters","onDelete","Table","TableVariant","onSort","opened","sizeCalculator","rowWrapper","TreeRowWrapper","onSelect","rowKey","TableHeader","TableBody","SkeletonTable","rowSize","TableToolbar","isFooter","Pagination","dropDirection","propTypes","PropTypes","history","push","defaultProps","connect","dispatch","onLoadApis","onSelectRow","error","addNotification","description","dismissable"],"sourceRoot":""}