{"version":3,"file":"js/Detail.1690375978880.e1a61e13ceb00281a8e9.js","mappings":"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","sources":["webpack:///./src/Utilities/const.js","webpack:///./src/api/index.js","webpack:///./src/routes/Detail.js","webpack:///./src/Utilities/hooks.js","webpack:///./src/store/actions.js"],"sourcesContent":["export const BASENAME = '/docs/api';\n","import { versionMapper, DEFAULT_PREFIX } from './constants';\nimport instance from '@redhat-cloud-services/frontend-components-utilities/interceptors';\nimport { load } from 'js-yaml';\nexport { default as instance } from '@redhat-cloud-services/frontend-components-utilities/interceptors';\n\nexport const apiList = () => {\n  return instance.get(`/${DEFAULT_PREFIX}`);\n};\n\nexport const generateUrl = (appName, appVersion) =>\n  `/${DEFAULT_PREFIX}/${appName}/${appVersion}/openapi.json`;\n\nexport const activeApi = (isBeta, isProd) =>\n  instance\n    .get(\n      `/api/chrome-service/v1/static/${isBeta ? 'beta' : 'stable'}/${\n        isProd ? 'prod' : 'stage'\n      }/main.yml`\n    )\n    .then((data) => load(data))\n    .then((data) => ({\n      services: Object.keys(data)\n        .filter((oneAppKey) => data[oneAppKey].api)\n        .map((oneAppKey) => ({\n          appName: oneAppKey,\n          ...data[oneAppKey],\n        })),\n    }));\n\nexport const getSpec = (url, isGithub) => {\n  const spec = instance.get(url);\n  if (isGithub) {\n    return spec.then(({ content }) => load(Buffer.from(content, 'base64')));\n  }\n\n  return spec;\n};\n\nexport const isValidGithub = ({ owner, repo, content } = {}) => {\n  return owner && repo && content;\n};\n\nexport const oneApi = ({ name, version = 'v1', url: defaultUrl, github }) => {\n  const url = isValidGithub(github)\n    ? `https://api.github.com/repos/${github.owner}/${github.repo}/contents/${github.content}`\n    : defaultUrl ?? generateUrl(name, versionMapper[name] || version);\n  const spec = getSpec(url, isValidGithub(github));\n  return spec.then((data) => ({\n    ...data,\n    latest: url,\n    name,\n    servers: [\n      ...(data.servers || []),\n      { url: `/api/${name}/${versionMapper[name] || version}` },\n    ]\n      .filter(\n        (server, key, array) =>\n          array.findIndex(\n            ({ url }) =>\n              `${location.origin}${server.url}`.indexOf(url) === 0 ||\n              server.url.indexOf(url) === 0\n          ) === key\n      )\n      .map((server) => ({\n        ...server,\n        url:\n          server.url.indexOf('/') === 0\n            ? `${location.origin}${server.url}`\n            : server.url,\n      })),\n  }));\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport { useDispatch, useSelector } from 'react-redux';\nimport SwaggerUI from 'swagger-ui-react';\nimport 'swagger-ui-react/swagger-ui.css';\nimport { onLoadOneApi } from '../store/actions';\nimport {\n  Skeleton,\n  SkeletonSize,\n} from '@redhat-cloud-services/frontend-components/Skeleton';\nimport { Facebook } from 'react-content-loader';\nimport {\n  CardBody,\n  Card,\n  Breadcrumb,\n  BreadcrumbItem,\n  Modal,\n  Button,\n  Level,\n  LevelItem,\n  ButtonVariant,\n  Split,\n  SplitItem,\n  TextContent,\n  Text,\n} from '@patternfly/react-core';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport ReactJson from 'react-json-view';\nimport { useQuery } from '../Utilities/hooks';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport { BASENAME } from '../Utilities/const';\n\nconst Detail = () => {\n  const dispatch = useDispatch();\n  const loaded = useSelector(({ detail: { loaded } }) => loaded);\n  const spec = useSelector(({ detail: { spec } }) => spec);\n  const error = useSelector(({ detail: { error } }) => error);\n  const latest = useSelector(({ detail: { latest } }) => latest);\n  const { apiName, version = 'v1' } = useParams();\n  const navigate = useNavigate();\n  const query = useQuery();\n  const { auth } = useChrome();\n  useEffect(() => {\n    dispatch(\n      onLoadOneApi({\n        name: apiName,\n        version,\n        url: query.get('url'),\n        github: {\n          owner: query.get('github-owner'),\n          repo: query.get('github-repo'),\n          content: query.get('github-content'),\n        },\n      })\n    );\n  }, []);\n\n  const requestInterceptor = useCallback(\n    async (req) => {\n      req.headers = {\n        ...(req.headers || {}),\n        Authorization: `Bearer ${await auth.getToken()}`,\n      };\n      return req;\n    },\n    [auth]\n  );\n\n  const [isOpen, onModalToggle] = useState(false);\n\n  return (\n    <React.Fragment>\n      <PageHeader className=\"pf-m-light\">\n        <PageHeaderTitle\n          title={\n            <React.Fragment>\n              <Breadcrumb>\n                <BreadcrumbItem>\n                  <Link to={BASENAME}>Overview</Link>\n                </BreadcrumbItem>\n                <BreadcrumbItem isActive>{apiName}</BreadcrumbItem>\n              </Breadcrumb>\n              <React.Fragment>\n                {loaded && !error && (\n                  <Level className=\"ins-c-docs__api-detail\">\n                    <LevelItem className=\"ins-c-docs__api-detail-info\">\n                      {loaded ? (\n                        `Detail of ${spec?.info?.title}`\n                      ) : (\n                        <Skeleton size={SkeletonSize.md} />\n                      )}\n                    </LevelItem>\n                    <LevelItem>\n                      <Split hasGutter>\n                        <SplitItem className=\"ins-c-docs__api-detail-info\">\n                          {loaded && !error ? (\n                            <TextContent>\n                              <Text\n                                component=\"a\"\n                                href={`${\n                                  latest.includes('https://')\n                                    ? ''\n                                    : location.origin\n                                }${latest}`}\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                              >\n                                Open Raw <ExternalLinkAltIcon size=\"sm\" />\n                              </Text>\n                            </TextContent>\n                          ) : (\n                            <Skeleton size={SkeletonSize.mdmd} />\n                          )}\n                        </SplitItem>\n                        <SplitItem className=\"ins-c-docs__api-detail-info\">\n                          {loaded ? (\n                            <Button\n                              onClick={() => onModalToggle(true)}\n                              variant={ButtonVariant.secondary}\n                            >\n                              Show JSON\n                            </Button>\n                          ) : (\n                            <Skeleton size={SkeletonSize.md} />\n                          )}\n                        </SplitItem>\n                      </Split>\n                    </LevelItem>\n                  </Level>\n                )}\n              </React.Fragment>\n            </React.Fragment>\n          }\n        />\n      </PageHeader>\n      <Main>\n        <React.Fragment>\n          <Card>\n            <CardBody>\n              {loaded && (\n                <SwaggerUI\n                  docExpansion=\"list\"\n                  {...(query.get('readonly') && {\n                    supportedSubmitMethods: [''],\n                  })}\n                  spec={spec}\n                  requestInterceptor={requestInterceptor}\n                  onComplete={(system) => {\n                    const {\n                      layoutActions: { show },\n                    } = system;\n                    system.layoutActions.show = (isShownKey, isShown) => {\n                      const newHash = CSS.escape(isShownKey.join('-'));\n                      const oldHash = location.hash?.replace('#', '');\n                      show(isShownKey, isShown);\n                      if (isShown && newHash !== oldHash) {\n                        navigate(\n                          `${BASENAME}/${apiName}/${version}?${query.toString()}#${newHash}`,\n                          { replace: true }\n                        );\n                      }\n                    };\n\n                    if (location.hash && location.hash.length > 0) {\n                      const found = document.querySelector(\n                        `[id$='${location.hash\n                          .replace('#', '')\n                          .replace(/\\\\./g, '\\\\\\\\.')}']`\n                      );\n                      if (found) {\n                        found.scrollIntoView();\n                        show(\n                          location.hash\n                            .replace('#', '')\n                            .replace(/\\\\/g, '')\n                            .split('-'),\n                          true\n                        );\n                      }\n                    }\n                  }}\n                />\n              )}\n              {!loaded && <Facebook />}\n            </CardBody>\n          </Card>\n        </React.Fragment>\n      </Main>\n      <Modal\n        width={'50%'}\n        title=\"Spec JSON\"\n        isOpen={isOpen}\n        onClose={() => onModalToggle(false)}\n        actions={[\n          <Button\n            key=\"close\"\n            variant={ButtonVariant.secondary}\n            onClick={() => onModalToggle(false)}\n          >\n            Close\n          </Button>,\n        ]}\n      >\n        <ReactJson\n          displayDataTypes={false}\n          shouldCollapse={({ name }) => name !== 'root' && name !== 'paths'}\n          src={spec}\n          enableClipboard={({ src }) =>\n            navigator.clipboard.writeText(JSON.stringify(src, null, 2))\n          }\n        />\n      </Modal>\n    </React.Fragment>\n  );\n};\n\nexport default Detail;\n","import { useLocation } from 'react-router-dom';\nexport const useQuery = () => new URLSearchParams(useLocation().search);\n","import { LOAD_ALL, LOAD_ONE_API, SELECT_ROW } from './actionTypes';\nimport { activeApi, oneApi } from '../api';\n\nexport const onLoadApis = (isBeta, isProd) => ({\n  type: LOAD_ALL,\n  payload: activeApi(isBeta, isProd),\n});\n\nexport const onLoadOneApi = (data) => ({\n  type: LOAD_ONE_API,\n  payload: oneApi(data),\n});\n\nexport const onSelectRow = (data) => ({\n  type: SELECT_ROW,\n  payload: data,\n});\n"],"names":["BASENAME","activeApi","isBeta","isProd","instance","then","data","load","services","Object","keys","filter","oneAppKey","api","map","appName","isValidGithub","owner","repo","content","oneApi","appVersion","name","version","defaultUrl","url","github","versionMapper","DEFAULT_PREFIX","spec","isGithub","Buffer","from","getSpec","latest","servers","server","key","array","findIndex","location","origin","indexOf","dispatch","useDispatch","loaded","useSelector","detail","error","useParams","apiName","navigate","useNavigate","query","URLSearchParams","useLocation","search","auth","useChrome","useEffect","onLoadOneApi","get","requestInterceptor","useCallback","req","headers","getToken","Authorization","useState","isOpen","onModalToggle","PageHeader","className","PageHeaderTitle","title","Breadcrumb","BreadcrumbItem","Link","to","isActive","Level","LevelItem","info","Skeleton","size","SkeletonSize","Split","hasGutter","SplitItem","TextContent","Text","component","href","includes","target","rel","Button","onClick","variant","ButtonVariant","Main","Card","CardBody","docExpansion","supportedSubmitMethods","onComplete","system","show","layoutActions","isShownKey","isShown","newHash","CSS","escape","join","oldHash","hash","replace","toString","length","found","document","querySelector","scrollIntoView","split","Modal","width","onClose","actions","displayDataTypes","shouldCollapse","src","enableClipboard","navigator","clipboard","writeText","JSON","stringify","onLoadApis","type","LOAD_ALL","payload","LOAD_ONE_API","onSelectRow","SELECT_ROW"],"sourceRoot":""}