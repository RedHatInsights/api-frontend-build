{"version":3,"file":"js/Overview.1666000557637.dbc6ed8415aedca02070.js","mappings":"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","sources":["webpack:///./src/api/index.js","webpack:///./src/Utilities/overviewRows.js","webpack:///./src/routes/Overview.js","webpack:///./src/store/actions.js"],"sourcesContent":["import { versionMapper, DEFAULT_PREFIX } from './constants';\nimport instance from '@redhat-cloud-services/frontend-components-utilities/interceptors';\nimport { load } from 'js-yaml';\nexport { default as instance } from '@redhat-cloud-services/frontend-components-utilities/interceptors';\n\nexport const apiList = () => {\n  return instance.get(`/${DEFAULT_PREFIX}`);\n};\n\nexport const generateUrl = (appName, appVersion) =>\n  `/${DEFAULT_PREFIX}/${appName}/${appVersion}/openapi.json`;\n\nexport const activeApi = () =>\n  instance\n    .get(`${insights.chrome.isBeta() ? '/beta' : ''}/config/main.yml`)\n    .then((data) => load(data))\n    .then((data) => ({\n      services: Object.keys(data)\n        .filter((oneAppKey) => data[oneAppKey].api)\n        .map((oneAppKey) => ({\n          appName: oneAppKey,\n          ...data[oneAppKey],\n        })),\n    }));\n\nexport const getSpec = (url, isGithub) => {\n  const spec = instance.get(url);\n  if (isGithub) {\n    return spec.then(({ content }) => load(Buffer.from(content, 'base64')));\n  }\n\n  return spec;\n};\n\nexport const isValidGithub = ({ owner, repo, content } = {}) => {\n  return owner && repo && content;\n};\n\nexport const oneApi = ({ name, version = 'v1', url: defaultUrl, github }) => {\n  const url = isValidGithub(github)\n    ? `https://api.github.com/repos/${github.owner}/${github.repo}/contents/${github.content}`\n    : defaultUrl ?? generateUrl(name, versionMapper[name] || version);\n  const spec = getSpec(url, isValidGithub(github));\n  return spec.then((data) => ({\n    ...data,\n    latest: url,\n    name,\n    servers: [\n      ...(data.servers || []),\n      { url: `/api/${name}/${versionMapper[name] || version}` },\n    ]\n      .filter(\n        (server, key, array) =>\n          array.findIndex(\n            ({ url }) =>\n              `${location.origin}${server.url}`.indexOf(url) === 0 ||\n              server.url.indexOf(url) === 0\n          ) === key\n      )\n      .map((server) => ({\n        ...server,\n        url:\n          server.url.indexOf('/') === 0\n            ? `${location.origin}${server.url}`\n            : server.url,\n      })),\n  }));\n};\n","import React, { Fragment } from 'react';\nimport {\n  Badge,\n  Bullseye,\n  Button,\n  EmptyState,\n  Title,\n  EmptyStateBody,\n  EmptyStateVariant,\n} from '@patternfly/react-core';\nimport { Link } from 'react-router-dom';\nimport {\n  cellWidth,\n  nowrap,\n  sortable,\n  SortByDirection,\n} from '@patternfly/react-table';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components/EmptyTable';\nimport { ExportIcon, ExternalLinkSquareAltIcon } from '@patternfly/react-icons';\nimport { oneApi } from '../api';\nimport fileDownload from 'js-file-download';\nimport JSZip from 'jszip';\nimport flatten from 'lodash/flatten';\nimport { treeRow } from '@patternfly/react-table';\n\nconst indexToKey = ['', 'title', 'appName', 'version']; // pf indexes from 1 not 0\n\nexport const columns = (onSetRows, onRowSelected) => [\n  {\n    title: 'Application name',\n    transforms: [sortable],\n    cellTransforms: [...(onSetRows ? [treeRow(onSetRows, onRowSelected)] : [])],\n  },\n  { title: 'API endpoint', transforms: [nowrap, sortable, cellWidth(10)] },\n  { title: 'API version', transforms: [nowrap, sortable, cellWidth(10)] },\n  { title: 'Download', transforms: [cellWidth(10)] },\n];\n\nconst constructParams = (url, github, config) => {\n  const params = new URLSearchParams();\n  url && params.set('url', url);\n  if (github) {\n    params.set('github-owner', github.owner);\n    params.set('github-repo', github.repo);\n    params.set('github-content', github.path);\n  }\n  Object.entries(config).forEach(([key, value]) => {\n    value && params.set(key, value);\n  });\n  return params.toString();\n};\n\nexport const rowMapper = (\n  title,\n  versions,\n  url,\n  github,\n  selectedRows = [],\n  apiName,\n  config\n) => ({\n  selected:\n    selectedRows?.[title]?.isSelected ||\n    selectedRows?.[`parent-${title}`]?.isSelected,\n  cells: [\n    {\n      title: (\n        <Fragment>\n          {versions || url || github ? (\n            <Link\n              to={`/${apiName}${\n                versions && versions[0] && versions[0] !== 'v1'\n                  ? `/${versions[0]}`\n                  : ''\n              }${\n                url || github || Object.values(config).length > 0 ? '?' : ''\n              }${constructParams(url, github, config)}`}\n            >\n              {title}\n            </Link>\n          ) : (\n            title\n          )}\n        </Fragment>\n      ),\n      value: title,\n      props: {\n        value: title,\n        'data-position': 'title',\n      },\n    },\n    versions\n      ? `/api/${apiName}`\n      : url\n      ? {\n          title: (\n            <span className=\"ins-c-docs__url\">\n              {url.replace(/openapi$/, '').replace(/^http(?:s):\\/\\//, '')}\n            </span>\n          ),\n          props: {\n            colSpan: 2,\n          },\n          value: url,\n        }\n      : github\n      ? {\n          title: (\n            <Fragment>\n              <Button\n                variant=\"link\"\n                isInline\n                component=\"a\"\n                icon={<ExternalLinkSquareAltIcon />}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                iconPosition=\"right\"\n                href={`https://github.com/${github.owner}/${github.repo}`}\n              >\n                {github.owner}/{github.repo}\n              </Button>\n            </Fragment>\n          ),\n          props: {\n            colSpan: 2,\n          },\n          value: github,\n        }\n      : '',\n    ...(!url && !github\n      ? [\n          {\n            title: (\n              <Fragment>\n                {versions?.map?.((version) => (\n                  <Link key={version} to={`/${apiName}/${version}`}>\n                    <Badge>{version}</Badge>\n                  </Link>\n                ))}\n              </Fragment>\n            ),\n            value: versions,\n          },\n        ]\n      : []),\n    {\n      title: (\n        <Button\n          variant=\"plain\"\n          onClick={() => downloadFile(apiName, versions?.[0], url, github)}\n        >\n          {' '}\n          <ExportIcon />{' '}\n        </Button>\n      ),\n    },\n  ],\n});\n\nexport const emptyTable = [\n  {\n    cells: [\n      {\n        title: (\n          <EmptyTable>\n            <Bullseye>\n              <EmptyState variant={EmptyStateVariant.full}>\n                <Title headingLevel=\"h5\" size=\"lg\">\n                  No matching rules found\n                </Title>\n                <EmptyStateBody>\n                  This filter criteria matches no rules. <br /> Try changing\n                  your filter settings.\n                </EmptyStateBody>\n              </EmptyState>\n            </Bullseye>\n          </EmptyTable>\n        ),\n        props: {\n          colSpan: 4,\n        },\n      },\n    ],\n  },\n];\n\nexport function sortRows(curr, next, key = 'title', isDesc) {\n  const getSortKey = (obj) =>\n    key === 'appName' && obj.apiName ? 'apiName' : key;\n  return isDesc\n    ? next[getSortKey(next)]?.localeCompare(curr[getSortKey(curr)], 'en', {\n        sensitivity: 'base',\n      })\n    : curr[getSortKey(curr)]?.localeCompare(next[getSortKey(next)], 'en', {\n        sensitivity: 'base',\n      });\n}\n\nexport function buildRows(\n  sortBy,\n  { page, perPage },\n  rows,\n  selectedRows,\n  openedRows\n) {\n  if (rows.length > 0) {\n    let rowIndex = 0;\n    return rows\n      .sort((curr, next) =>\n        sortRows(\n          curr,\n          next,\n          indexToKey[sortBy.index],\n          sortBy.direction === SortByDirection.desc\n        )\n      )\n      .slice((page - 1) * perPage, page * perPage)\n      .map(({ frontend, title, appName, version, apiName, api }, index) => {\n        const row = [\n          {\n            ...rowMapper(\n              title,\n              api.versions,\n              api.url,\n              api.github,\n              selectedRows,\n              apiName || appName,\n              { readonly: api.readonly }\n            ),\n            ...(api.subItems && {\n              isTreeOpen: openedRows?.includes?.(\n                (frontend && frontend.title) || title\n              ),\n              subItems: api.subItems,\n            }),\n            noDetail: !version && !api.url && !api.github,\n            posinset: index + 1,\n          },\n          ...(api.subItems\n            ? Object.entries(api.subItems).map(\n                (\n                  [key, { title, versions, url, apiName, github, readonly }],\n                  subItemIndex\n                ) => {\n                  return {\n                    ...rowMapper(\n                      title,\n                      versions,\n                      url,\n                      github,\n                      selectedRows,\n                      apiName || key,\n                      { readonly }\n                    ),\n                    treeParent: rowIndex,\n                    posinset: subItemIndex + 1,\n                  };\n                }\n              )\n            : []),\n        ];\n        rowIndex =\n          rowIndex + (api.subItems ? Object.keys(api.subItems).length + 1 : 1);\n        return row;\n      })\n      .flat();\n  }\n\n  return emptyTable;\n}\n\nexport function filterRows(row, filter) {\n  const restFilterValues = [\n    row.frontend?.title,\n    ...(row.frontend?.paths || []),\n    // eslint-disable-next-line camelcase\n    ...(row.frontend?.sub_apps?.reduce(\n      (acc, curr) => [...acc, curr.title, curr.id],\n      []\n    ) || []),\n    row.api?.apiName,\n  ].filter(Boolean);\n  return (\n    indexToKey.some(\n      (key) =>\n        row[key] &&\n        row[key].toLocaleLowerCase().indexOf(filter.toLocaleLowerCase()) !== -1\n    ) ||\n    restFilterValues.some(\n      (value) =>\n        value.toLocaleLowerCase().indexOf(filter.toLocaleLowerCase()) !== -1\n    )\n  );\n}\n\nexport function downloadFile(appName, appVersion, url, github) {\n  oneApi({\n    name: appName,\n    version: appVersion,\n    url,\n    github: { ...github, content: github?.path },\n  }).then((data) => {\n    delete data.latest;\n    delete data.name;\n    fileDownload(JSON.stringify(data), `${appName}-openapi.json`);\n  });\n}\n\nexport function multiDownload(selectedRows = {}, onError) {\n  const zip = new JSZip();\n  const allFiles = Object.values(selectedRows)\n    .filter(({ isSelected }) => isSelected)\n    .map(({ appName, version, apiName, subItems, url, github }) => {\n      if (subItems) {\n        return Object.entries(subItems).map(\n          ([key, { versions, url, github }]) =>\n            oneApi({ name: key, version: versions?.[0], url, github }).catch(\n              () =>\n                onError(\n                  `API ${key} with version ${versions[0]} not found or broken.`\n                )\n            )\n        );\n      } else {\n        return oneApi({ name: apiName || appName, version, url, github }).catch(\n          () =>\n            onError(\n              `API ${\n                apiName || appName\n              } with version ${version} not found or broken.`\n            )\n        );\n      }\n    });\n\n  Promise.all(flatten(allFiles)).then((files) => {\n    if (files && files.length > 1) {\n      files.map(({ name, ...file } = {}) => {\n        if (name) {\n          delete file.latest;\n          zip.file(`${name}-openapi.json`, JSON.stringify(file));\n        }\n      });\n      zip\n        .generateAsync({ type: 'blob' })\n        .then((content) => fileDownload(content, `cloud-services-openapi.zip`));\n    } else if (files && files.length === 1) {\n      const { name, ...file } = files[0] || {};\n      if (name) {\n        delete file.latest;\n        fileDownload(JSON.stringify(file), `${name}-openapi.json`);\n      }\n    }\n  });\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\n\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport { SkeletonTable } from '@redhat-cloud-services/frontend-components/SkeletonTable';\nimport TableToolbar from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { Pagination } from '@patternfly/react-core';\nimport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableVariant,\n} from '@patternfly/react-table';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { onLoadApis, onSelectRow } from '../store/actions';\nimport {\n  filterRows,\n  buildRows,\n  columns,\n  multiDownload,\n} from '../Utilities/overviewRows';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nconst isNotSelected = ({ selectedRows }) => {\n  return (\n    !selectedRows ||\n    Object.values(selectedRows || {})\n      .map(({ isSelected }) => isSelected)\n      .filter(Boolean).length === 0\n  );\n};\n\nconst checkChildrenSelection = (selectedRows, subItems, checkAll = false) => {\n  if (checkAll && Object.keys(selectedRows).length !== 0) {\n    return Object.values(subItems).every?.(({ title }) =>\n      Object.entries(selectedRows).find(\n        ([key, { isSelected }]) => title === key && isSelected\n      )\n    );\n  }\n  return Object.values(subItems).some?.(({ title }) =>\n    Object.entries(selectedRows).find(\n      ([key, { isSelected }]) => title === key && isSelected\n    )\n  );\n};\n\nconst Overview = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(onLoadApis());\n  }, []);\n  const loaded = useSelector(({ services: { loaded } }) => loaded);\n  const selectedRows = useSelector(\n    ({ services: { selectedRows } }) => selectedRows\n  );\n  const endpoints = useSelector(\n    ({ services: { endpoints } }) => endpoints || []\n  );\n  const [openedRows, setOpenedRows] = useState([]);\n  const [sortBy, onSortBy] = useState({});\n  const [pageSettings, onPaginate] = useState({\n    perPage: 50,\n    page: 1,\n  });\n  const [filter, onChangeFilter] = useState('');\n  const filtered = filter && endpoints.filter((row) => filterRows(row, filter));\n  const rows = loaded\n    ? buildRows(\n        sortBy,\n        pageSettings,\n        filtered || endpoints,\n        selectedRows,\n        openedRows\n      )\n    : [];\n  const onSetRows = (_e, _index, _item, { props: { value } }) => {\n    if (openedRows.includes(value)) {\n      setOpenedRows(() => openedRows.filter((opened) => opened !== value));\n    } else {\n      setOpenedRows(() => [...openedRows, value]);\n    }\n  };\n\n  const calculatedRows = rows.map((item) => {\n    const value = item.cells[0]?.value;\n    const props = {\n      isChecked: item.selected,\n      isExpanded: openedRows.includes(value),\n      value: value,\n      'aria-setsize': Object.keys(item.subItems || {}).length,\n      'aria-posinset': item.posinset,\n      'aria-level': 1,\n    };\n\n    if (Object.prototype.hasOwnProperty.call(item, 'treeParent')) {\n      const parent = rows[item.treeParent];\n      props['aria-level'] = 2;\n      props.isHidden = !openedRows.includes(parent?.cells?.[0]?.value);\n      props.isChecked = item.selected || parent.selected;\n    }\n    if (\n      !item.selected &&\n      Object.prototype.hasOwnProperty.call(item, 'subItems')\n    ) {\n      if (checkChildrenSelection(selectedRows, item.subItems, true)) {\n        props.isChecked = true;\n      } else if (checkChildrenSelection(selectedRows, item.subItems)) {\n        props.isChecked = null;\n      }\n    }\n\n    return {\n      ...item,\n      props,\n    };\n  });\n\n  return (\n    <React.Fragment>\n      <PageHeader className=\"pf-m-light\">\n        <PageHeaderTitle title=\"API documentation\" />\n      </PageHeader>\n      <Main className=\"ins-c-docs__api\">\n        <React.Fragment>\n          <PrimaryToolbar\n            filterConfig={{\n              items: [\n                {\n                  label: 'Filter by application name',\n                  type: 'text',\n                  filterValues: {\n                    id: 'filter-by-string',\n                    key: 'filter-by-string',\n                    placeholder: 'Filter by application name',\n                    value: filter,\n                    onChange: (_e, value) => {\n                      onPaginate({\n                        ...pageSettings,\n                        page: 1,\n                      });\n                      onChangeFilter(value);\n                    },\n                    isDisabled: !loaded,\n                  },\n                },\n              ],\n            }}\n            actionsConfig={{\n              actions: [\n                {\n                  label: 'Download selected',\n                  props: {\n                    isDisabled: isNotSelected({ selectedRows }),\n                    onClick: () =>\n                      multiDownload(selectedRows, (error) =>\n                        dispatch(\n                          addNotification({\n                            variant: 'danger',\n                            title: 'Server error',\n                            description: error,\n                            dismissable: true,\n                          })\n                        )\n                      ),\n                  },\n                },\n              ],\n            }}\n            {...(loaded && {\n              pagination: {\n                ...pageSettings,\n                itemCount: (filtered || endpoints).length,\n                onSetPage: (_e, page) =>\n                  onPaginate({\n                    ...pageSettings,\n                    page,\n                  }),\n                onPerPageSelect: (_event, perPage) =>\n                  onPaginate({\n                    ...pageSettings,\n                    perPage,\n                  }),\n              },\n            })}\n            {...(filter.length > 0 && {\n              activeFiltersConfig: {\n                filters: [\n                  {\n                    name: filter,\n                  },\n                ],\n                onDelete: () => {\n                  onPaginate({\n                    ...pageSettings,\n                    page: 1,\n                  });\n                  onChangeFilter('');\n                },\n              },\n            })}\n          />\n          {loaded ? (\n            <Table\n              isTreeTable\n              className=\"pf-m-expandable pf-c-treeview\"\n              aria-label=\"Sortable Table\"\n              canSelectAll={false}\n              variant={TableVariant.compact}\n              sortBy={sortBy}\n              onSort={(_e, index, direction) => onSortBy({ index, direction })}\n              cells={columns(onSetRows, (_e, isSelected, rowKey) => {\n                const currRow = calculatedRows[rowKey];\n                if (\n                  !isSelected &&\n                  Object.prototype.hasOwnProperty.call(currRow, 'subItems')\n                ) {\n                  dispatch(\n                    onSelectRow({\n                      isSelected,\n                      row: calculatedRows.filter(({ props: { value } }) =>\n                        Object.values(currRow.subItems).find(\n                          ({ title }) => title === value\n                        )\n                      ),\n                    })\n                  );\n                }\n                dispatch(onSelectRow({ isSelected, row: currRow }));\n              })}\n              rows={calculatedRows}\n            >\n              <TableHeader />\n              <TableBody />\n            </Table>\n          ) : (\n            <SkeletonTable columns={columns()} rowSize={28} />\n          )}\n        </React.Fragment>\n        <TableToolbar isFooter>\n          {loaded ? (\n            <Pagination\n              variant=\"bottom\"\n              dropDirection=\"up\"\n              itemCount={(filtered || endpoints).length}\n              perPage={pageSettings.perPage}\n              page={pageSettings.page}\n              onSetPage={(_e, page) =>\n                onPaginate({\n                  ...pageSettings,\n                  page,\n                })\n              }\n              onPerPageSelect={(_event, perPage) =>\n                onPaginate({\n                  ...pageSettings,\n                  perPage,\n                })\n              }\n            />\n          ) : (\n            `loading`\n          )}\n        </TableToolbar>\n      </Main>\n    </React.Fragment>\n  );\n};\n\nexport default Overview;\n","import { LOAD_ALL, LOAD_ONE_API, SELECT_ROW } from './actionTypes';\nimport { activeApi, oneApi } from '../api';\n\nexport const onLoadApis = () => ({\n  type: LOAD_ALL,\n  payload: activeApi(),\n});\n\nexport const onLoadOneApi = (data) => ({\n  type: LOAD_ONE_API,\n  payload: oneApi(data),\n});\n\nexport const onSelectRow = (data) => ({\n  type: SELECT_ROW,\n  payload: data,\n});\n"],"names":["activeApi","instance","insights","chrome","isBeta","then","data","load","services","Object","keys","filter","oneAppKey","api","map","appName","isValidGithub","owner","repo","content","oneApi","appVersion","name","version","defaultUrl","url","github","versionMapper","DEFAULT_PREFIX","spec","isGithub","Buffer","from","getSpec","latest","servers","server","key","array","findIndex","location","origin","indexOf","indexToKey","columns","onSetRows","onRowSelected","title","transforms","sortable","cellTransforms","treeRow","nowrap","cellWidth","constructParams","config","params","URLSearchParams","set","path","entries","forEach","value","toString","rowMapper","versions","selectedRows","apiName","selected","isSelected","cells","Fragment","Link","to","values","length","props","className","replace","colSpan","Button","variant","isInline","component","icon","target","rel","iconPosition","href","Badge","onClick","downloadFile","emptyTable","EmptyTable","Bullseye","EmptyState","EmptyStateVariant","Title","headingLevel","size","EmptyStateBody","fileDownload","JSON","stringify","isNotSelected","Boolean","checkChildrenSelection","subItems","checkAll","every","find","some","dispatch","useDispatch","useEffect","onLoadApis","loaded","useSelector","endpoints","useState","openedRows","setOpenedRows","sortBy","onSortBy","perPage","page","pageSettings","onPaginate","onChangeFilter","filtered","row","restFilterValues","frontend","paths","sub_apps","reduce","acc","curr","id","toLocaleLowerCase","filterRows","rows","rowIndex","sort","next","getSortKey","obj","localeCompare","sensitivity","sortRows","index","direction","SortByDirection","slice","readonly","isTreeOpen","includes","noDetail","posinset","subItemIndex","treeParent","flat","buildRows","calculatedRows","item","isChecked","isExpanded","prototype","hasOwnProperty","call","parent","isHidden","PageHeader","PageHeaderTitle","Main","PrimaryToolbar","filterConfig","items","label","type","filterValues","placeholder","onChange","_e","isDisabled","actionsConfig","actions","onError","zip","JSZip","allFiles","catch","Promise","all","flatten","files","file","generateAsync","multiDownload","error","addNotification","description","dismissable","pagination","itemCount","onSetPage","onPerPageSelect","_event","activeFiltersConfig","filters","onDelete","Table","isTreeTable","canSelectAll","TableVariant","onSort","_index","_item","opened","rowKey","currRow","onSelectRow","TableHeader","TableBody","SkeletonTable","rowSize","TableToolbar","isFooter","Pagination","dropDirection","LOAD_ALL","payload","onLoadOneApi","LOAD_ONE_API","SELECT_ROW"],"sourceRoot":""}