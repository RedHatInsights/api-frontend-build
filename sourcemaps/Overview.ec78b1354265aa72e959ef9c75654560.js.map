{"version":3,"file":"js/Overview.1652794531012.6534a1cd23f7ca9f827b.js","mappings":"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","sources":["webpack:///./src/api/index.js","webpack:///./src/Utilities/overviewRows.js","webpack:///./src/routes/Overview.js","webpack:///./src/store/actions.js"],"sourcesContent":["import { versionMapper, DEFAULT_PREFIX } from './constants';\nimport instance from '@redhat-cloud-services/frontend-components-utilities/interceptors';\nimport { load } from 'js-yaml';\nexport { default as instance } from '@redhat-cloud-services/frontend-components-utilities/interceptors';\n\nexport const apiList = () => {\n  return instance.get(`/${DEFAULT_PREFIX}`);\n};\n\nexport const generateUrl = (appName, appVersion) =>\n  `/${DEFAULT_PREFIX}/${appName}/${appVersion}/openapi.json`;\n\nexport const activeApi = () =>\n  instance\n    .get(`${insights.chrome.isBeta() ? '/beta' : ''}/config/main.yml`)\n    .then((data) => load(data))\n    .then((data) => ({\n      services: Object.keys(data)\n        .filter((oneAppKey) => data[oneAppKey].api)\n        .map((oneAppKey) => ({\n          appName: oneAppKey,\n          ...data[oneAppKey],\n        })),\n    }));\n\nexport const oneApi = ({ name, version = 'v1', url: defaultUrl }) => {\n  const url = defaultUrl ?? generateUrl(name, versionMapper[name] || version);\n  return instance.get(url).then((data) => ({\n    ...data,\n    latest: url,\n    name,\n    servers: [\n      ...(data.servers || []),\n      { url: `/api/${name}/${versionMapper[name] || version}` },\n    ]\n      .filter(\n        (server, key, array) =>\n          array.findIndex(\n            ({ url }) =>\n              `${location.origin}${server.url}`.indexOf(url) === 0 ||\n              server.url.indexOf(url) === 0\n          ) === key\n      )\n      .map((server) => ({\n        ...server,\n        url:\n          server.url.indexOf('/') === 0\n            ? `${location.origin}${server.url}`\n            : server.url,\n      })),\n  }));\n};\n","import React, { Fragment } from 'react';\nimport {\n  Badge,\n  Bullseye,\n  Button,\n  EmptyState,\n  Title,\n  EmptyStateBody,\n  EmptyStateVariant,\n} from '@patternfly/react-core';\nimport { Link } from 'react-router-dom';\nimport {\n  cellWidth,\n  nowrap,\n  sortable,\n  SortByDirection,\n} from '@patternfly/react-table';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components/EmptyTable';\nimport { ExportIcon } from '@patternfly/react-icons';\nimport { oneApi } from '../api';\nimport fileDownload from 'js-file-download';\nimport JSZip from 'jszip';\nimport flatten from 'lodash/flatten';\nimport { treeTable } from '@redhat-cloud-services/frontend-components/TreeTable';\n\nconst indexToKey = ['', 'title', 'appName', 'version']; // pf indexes from 1 not 0\n\nexport const columns = (onSetRows) => [\n  {\n    title: 'Application name',\n    transforms: [sortable],\n    cellTransforms: [treeTable(onSetRows)],\n  },\n  { title: 'API endpoint', transforms: [nowrap, sortable, cellWidth(10)] },\n  { title: 'API version', transforms: [nowrap, sortable, cellWidth(10)] },\n  { title: 'Download', transforms: [cellWidth(10)] },\n];\n\nexport const rowMapper = (\n  title,\n  versions,\n  url,\n  selectedRows = [],\n  apiName\n) => ({\n  selected: selectedRows?.[title]?.isSelected,\n  cells: [\n    {\n      title: (\n        <Fragment>\n          {versions || url ? (\n            <Link\n              to={`/${apiName}${\n                versions && versions[0] !== 'v1'\n                  ? `/${apiName}/${versions[0] || ''}`\n                  : ''\n              }${url ? `?url=${url}` : ''}`}\n            >\n              {title}\n            </Link>\n          ) : (\n            title\n          )}\n        </Fragment>\n      ),\n      value: title,\n      props: {\n        value: title,\n        'data-position': 'title',\n      },\n    },\n    versions\n      ? `/api/${apiName}`\n      : url\n      ? {\n          title: (\n            <span className=\"ins-c-docs__url\">\n              {url.replace(/openapi$/, '').replace(/^http(?:s):\\/\\//, '')}\n            </span>\n          ),\n          props: {\n            colSpan: 2,\n          },\n          value: url,\n        }\n      : '',\n    ...(!url\n      ? [\n          {\n            title: (\n              <Fragment>\n                {versions?.map?.((version) => (\n                  <Link key={version} to={`/${apiName}/${version}`}>\n                    <Badge>{version}</Badge>\n                  </Link>\n                ))}\n              </Fragment>\n            ),\n            value: versions,\n          },\n        ]\n      : []),\n    {\n      title: (\n        <Button\n          variant=\"plain\"\n          onClick={() => downloadFile(apiName, versions?.[0], url)}\n        >\n          {' '}\n          <ExportIcon />{' '}\n        </Button>\n      ),\n    },\n  ],\n});\n\nexport const emptyTable = [\n  {\n    cells: [\n      {\n        title: (\n          <EmptyTable>\n            <Bullseye>\n              <EmptyState variant={EmptyStateVariant.full}>\n                <Title headingLevel=\"h5\" size=\"lg\">\n                  No matching rules found\n                </Title>\n                <EmptyStateBody>\n                  This filter criteria matches no rules. <br /> Try changing\n                  your filter settings.\n                </EmptyStateBody>\n              </EmptyState>\n            </Bullseye>\n          </EmptyTable>\n        ),\n        props: {\n          colSpan: 4,\n        },\n      },\n    ],\n  },\n];\n\nexport function sortRows(curr, next, key = 'title', isDesc) {\n  const getSortKey = (obj) =>\n    key === 'appName' && obj.apiName ? 'apiName' : key;\n  return isDesc\n    ? next[getSortKey(next)]?.localeCompare(curr[getSortKey(curr)], 'en', {\n        sensitivity: 'base',\n      })\n    : curr[getSortKey(curr)]?.localeCompare(next[getSortKey(next)], 'en', {\n        sensitivity: 'base',\n      });\n}\n\nexport function buildRows(\n  sortBy,\n  { page, perPage },\n  rows,\n  selectedRows,\n  openedRows\n) {\n  if (rows.length > 0) {\n    return rows\n      .sort((curr, next) =>\n        sortRows(\n          curr,\n          next,\n          indexToKey[sortBy.index],\n          sortBy.direction === SortByDirection.desc\n        )\n      )\n      .slice((page - 1) * perPage, page * perPage)\n      .map(({ frontend, title, appName, version, apiName, api }, index) => [\n        {\n          ...rowMapper(\n            title,\n            api.versions,\n            api.url,\n            selectedRows,\n            apiName || appName\n          ),\n          ...(api.subItems && {\n            isTreeOpen: openedRows?.includes?.(\n              (frontend && frontend.title) || title\n            ),\n            subItems: api.subItems,\n          }),\n          noDetail: !version && !api.url,\n        },\n        ...(api.subItems\n          ? Object.entries(api.subItems).map(\n              ([key, { title, versions, url, apiName }]) => ({\n                ...rowMapper(\n                  title,\n                  versions,\n                  url,\n                  selectedRows,\n                  apiName || key\n                ),\n                treeParent: index,\n              })\n            )\n          : []),\n      ])\n      .flat();\n  }\n\n  return emptyTable;\n}\n\nexport function filterRows(row, filter) {\n  const restFilterValues = [\n    row.frontend?.title,\n    ...(row.frontend?.paths || []),\n    // eslint-disable-next-line camelcase\n    ...(row.frontend?.sub_apps?.reduce(\n      (acc, curr) => [...acc, curr.title, curr.id],\n      []\n    ) || []),\n    row.api?.apiName,\n  ].filter(Boolean);\n  return (\n    indexToKey.some(\n      (key) =>\n        row[key] &&\n        row[key].toLocaleLowerCase().indexOf(filter.toLocaleLowerCase()) !== -1\n    ) ||\n    restFilterValues.some(\n      (value) =>\n        value.toLocaleLowerCase().indexOf(filter.toLocaleLowerCase()) !== -1\n    )\n  );\n}\n\nexport function downloadFile(appName, appVersion, url) {\n  oneApi({ name: appName, version: appVersion, url }).then((data) => {\n    delete data.latest;\n    delete data.name;\n    fileDownload(JSON.stringify(data), `${appName}-openapi.json`);\n  });\n}\n\nexport function multiDownload(selectedRows = {}, onError) {\n  const zip = new JSZip();\n  const allFiles = Object.values(selectedRows)\n    .filter(({ isSelected }) => isSelected)\n    .map(({ appName, version, apiName, subItems, url }) => {\n      if (subItems) {\n        return Object.entries(subItems).map(([key, { versions, url }]) =>\n          oneApi({ name: key, version: versions?.[0], url }).catch(() =>\n            onError(\n              `API ${key} with version ${versions[0]} not found or broken.`\n            )\n          )\n        );\n      } else {\n        return oneApi({ name: apiName || appName, version, url }).catch(() =>\n          onError(\n            `API ${\n              apiName || appName\n            } with version ${version} not found or broken.`\n          )\n        );\n      }\n    });\n\n  Promise.all(flatten(allFiles)).then((files) => {\n    if (files && files.length > 1) {\n      files.map(({ name, ...file } = {}) => {\n        if (name) {\n          delete file.latest;\n          zip.file(`${name}-openapi.json`, JSON.stringify(file));\n        }\n      });\n      zip\n        .generateAsync({ type: 'blob' })\n        .then((content) => fileDownload(content, `cloud-services-openapi.zip`));\n    } else if (files && files.length === 1) {\n      const { name, ...file } = files[0] || {};\n      if (name) {\n        delete file.latest;\n        fileDownload(JSON.stringify(file), `${name}-openapi.json`);\n      }\n    }\n  });\n}\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\n\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport { SkeletonTable } from '@redhat-cloud-services/frontend-components/SkeletonTable';\nimport TableToolbar from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport {\n  TreeRowWrapper,\n  sizeCalculator,\n} from '@redhat-cloud-services/frontend-components/TreeTable';\nimport { Pagination } from '@patternfly/react-core';\nimport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableVariant,\n} from '@patternfly/react-table';\nimport { connect } from 'react-redux';\nimport { onLoadApis, onSelectRow } from '../store/actions';\nimport {\n  filterRows,\n  buildRows,\n  columns,\n  multiDownload,\n} from '../Utilities/overviewRows';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nconst isNotSelected = ({ selectedRows }) => {\n  return (\n    !selectedRows ||\n    Object.values(selectedRows || {})\n      .map(({ isSelected }) => isSelected)\n      .filter(Boolean).length === 0\n  );\n};\n\nconst Overview = ({ loadApis, services, selectRow, onError }) => {\n  useEffect(() => {\n    loadApis();\n  }, []);\n  const [openedRows, setOpenedRows] = useState([]);\n  const [sortBy, onSortBy] = useState({});\n  const [pageSettings, onPaginate] = useState({\n    perPage: 50,\n    page: 1,\n  });\n  const [filter, onChangeFilter] = useState('');\n  const filtered =\n    filter && services.endpoints.filter((row) => filterRows(row, filter));\n  const rows = services.loaded\n    ? buildRows(\n        sortBy,\n        pageSettings,\n        filtered || services.endpoints,\n        services.selectedRows,\n        openedRows\n      )\n    : [];\n  const onSetRows = (_e, { props: { value } }) => {\n    if (openedRows.includes(value)) {\n      setOpenedRows(() => openedRows.filter((opened) => opened !== value));\n    } else {\n      setOpenedRows(() => [...openedRows, value]);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <PageHeader className=\"pf-m-light\">\n        <PageHeaderTitle title=\"API documentation\" />\n      </PageHeader>\n      <Main className=\"ins-c-docs__api\">\n        <React.Fragment>\n          <PrimaryToolbar\n            filterConfig={{\n              items: [\n                {\n                  label: 'Filter by application name',\n                  type: 'text',\n                  filterValues: {\n                    id: 'filter-by-string',\n                    key: 'filter-by-string',\n                    placeholder: 'Filter by application name',\n                    value: filter,\n                    onChange: (_e, value) => {\n                      onPaginate({\n                        ...pageSettings,\n                        page: 1,\n                      });\n                      onChangeFilter(value);\n                    },\n                    isDisabled: !services.loaded,\n                  },\n                },\n              ],\n            }}\n            actionsConfig={{\n              actions: [\n                {\n                  label: 'Download selected',\n                  props: {\n                    isDisabled: isNotSelected(services),\n                    onClick: () =>\n                      multiDownload(services.selectedRows, onError),\n                  },\n                },\n              ],\n            }}\n            {...(services.loaded && {\n              pagination: {\n                ...pageSettings,\n                itemCount: (filtered || services.endpoints).length,\n                onSetPage: (_e, page) =>\n                  onPaginate({\n                    ...pageSettings,\n                    page,\n                  }),\n                onPerPageSelect: (_event, perPage) =>\n                  onPaginate({\n                    ...pageSettings,\n                    perPage,\n                  }),\n              },\n            })}\n            {...(filter.length > 0 && {\n              activeFiltersConfig: {\n                filters: [\n                  {\n                    name: filter,\n                  },\n                ],\n                onDelete: () => {\n                  onPaginate({\n                    ...pageSettings,\n                    page: 1,\n                  });\n                  onChangeFilter('');\n                },\n              },\n            })}\n          />\n          {services.loaded ? (\n            <Table\n              className=\"pf-m-expandable pf-c-treeview\"\n              aria-label=\"Sortable Table\"\n              variant={TableVariant.compact}\n              sortBy={sortBy}\n              onSort={(_e, index, direction) => onSortBy({ index, direction })}\n              cells={columns(onSetRows)}\n              rows={sizeCalculator(rows)}\n              rowWrapper={TreeRowWrapper}\n              {...((filtered || services.endpoints).length > 0 && {\n                onSelect: (_e, isSelected, rowKey) => {\n                  if (rowKey === -1) {\n                    selectRow(isSelected, rows);\n                  } else {\n                    selectRow(isSelected, rows[rowKey]);\n                  }\n                },\n              })}\n            >\n              <TableHeader />\n              <TableBody />\n            </Table>\n          ) : (\n            <SkeletonTable columns={columns} rowSize={28} />\n          )}\n        </React.Fragment>\n        <TableToolbar isFooter>\n          {services.loaded ? (\n            <Pagination\n              variant=\"bottom\"\n              dropDirection=\"up\"\n              itemCount={(filtered || services.endpoints).length}\n              perPage={pageSettings.perPage}\n              page={pageSettings.page}\n              onSetPage={(_e, page) =>\n                onPaginate({\n                  ...pageSettings,\n                  page,\n                })\n              }\n              onPerPageSelect={(_event, perPage) =>\n                onPaginate({\n                  ...pageSettings,\n                  perPage,\n                })\n              }\n            />\n          ) : (\n            `loading`\n          )}\n        </TableToolbar>\n      </Main>\n    </React.Fragment>\n  );\n};\n\nOverview.propTypes = {\n  loadApis: PropTypes.func,\n  onError: PropTypes.func,\n  services: PropTypes.shape({\n    loaded: PropTypes.bool,\n    selectedRows: PropTypes.shape({\n      isSelected: PropTypes.bool,\n    }),\n    endpoints: PropTypes.arrayOf(\n      PropTypes.shape({\n        [PropTypes.string]: PropTypes.oneOfType([\n          PropTypes.string,\n          PropTypes.number,\n          PropTypes.bool,\n          PropTypes.node,\n        ]),\n      })\n    ),\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }),\n  selectRow: PropTypes.func,\n};\nOverview.defaultProps = {\n  loadApis: () => undefined,\n  selectRow: () => undefined,\n  onError: () => undefined,\n  services: {\n    loaded: false,\n    selectedRows: {},\n  },\n};\n\nexport default connect(\n  ({ services }) => ({\n    services,\n  }),\n  (dispatch) => ({\n    loadApis: () => dispatch(onLoadApis()),\n    selectRow: (isSelected, row) => dispatch(onSelectRow({ isSelected, row })),\n    onError: (error) =>\n      dispatch(\n        addNotification({\n          variant: 'danger',\n          title: 'Server error',\n          description: error,\n          dismissable: true,\n        })\n      ),\n  })\n)(Overview);\n","import { LOAD_ALL, LOAD_ONE_API, SELECT_ROW } from './actionTypes';\nimport { activeApi, oneApi } from '../api';\n\nexport const onLoadApis = () => ({\n  type: LOAD_ALL,\n  payload: activeApi(),\n});\n\nexport const onLoadOneApi = (data) => ({\n  type: LOAD_ONE_API,\n  payload: oneApi(data),\n});\n\nexport const onSelectRow = (data) => ({\n  type: SELECT_ROW,\n  payload: data,\n});\n"],"names":["activeApi","instance","insights","chrome","isBeta","then","data","load","services","Object","keys","filter","oneAppKey","api","map","appName","oneApi","appVersion","name","version","defaultUrl","url","versionMapper","DEFAULT_PREFIX","latest","servers","server","key","array","findIndex","location","origin","indexOf","indexToKey","columns","onSetRows","title","transforms","sortable","cellTransforms","treeTable","nowrap","cellWidth","rowMapper","versions","selectedRows","apiName","selected","isSelected","cells","Fragment","Link","to","value","props","className","replace","colSpan","Badge","Button","variant","onClick","downloadFile","emptyTable","EmptyTable","Bullseye","EmptyState","EmptyStateVariant","Title","headingLevel","size","EmptyStateBody","fileDownload","JSON","stringify","Overview","loadApis","selectRow","onError","useEffect","useState","openedRows","setOpenedRows","sortBy","onSortBy","perPage","page","pageSettings","onPaginate","onChangeFilter","filtered","endpoints","row","restFilterValues","frontend","paths","sub_apps","reduce","acc","curr","id","Boolean","some","toLocaleLowerCase","filterRows","rows","loaded","length","sort","next","getSortKey","obj","localeCompare","sensitivity","sortRows","index","direction","SortByDirection","slice","subItems","isTreeOpen","includes","noDetail","entries","treeParent","flat","buildRows","PageHeader","PageHeaderTitle","Main","PrimaryToolbar","filterConfig","items","label","type","filterValues","placeholder","onChange","_e","isDisabled","actionsConfig","actions","values","zip","JSZip","allFiles","catch","Promise","all","flatten","files","file","generateAsync","content","multiDownload","pagination","itemCount","onSetPage","onPerPageSelect","_event","activeFiltersConfig","filters","onDelete","Table","TableVariant","onSort","opened","sizeCalculator","rowWrapper","TreeRowWrapper","onSelect","rowKey","TableHeader","TableBody","SkeletonTable","rowSize","TableToolbar","isFooter","Pagination","dropDirection","propTypes","PropTypes","history","push","defaultProps","connect","dispatch","onLoadApis","onSelectRow","error","addNotification","description","dismissable","LOAD_ALL","payload","onLoadOneApi","LOAD_ONE_API","SELECT_ROW"],"sourceRoot":""}